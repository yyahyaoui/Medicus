{"version":3,"sources":["containers/dashboard/widgets/patientTable.js","containers/dashboard/widgets/banner.js","containers/dashboard/widgets/recentMedications.js","containers/dashboard/widgets/recentPayments.js","containers/dashboard/widgets/todaysAppointment.js","containers/dashboard/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","components/widgets.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/form.js","components/dropdown.js","containers/home/titleBar.js","components/lists.js","components/cards.js"],"names":["data","medicinId","ingredient","tradeName","strength","form","morning","midday","evening","night","unit","hints","reason","PatientTable","useState","medicinData","setmedicinData","onChange","e","target","name","value","editData","map","item","className","type","placeholder","WelcomeMessage","props","today","Date","FullName","user","session","date","ServicesAlert","isLoading","setIsLoading","count","setCount","useEffect","a","username","Username","fetch","headers","authToken","response","json","ok","Error","message","length","console","error","getCount","role","Banner","isCurrentUserPhysician","Boolean","isPhysician","DefaultMedicationItem","ViewAllItem","to","MedicationItem","medication","appointmentId","dosage","RecentMedicationWidget","medications","limit","state","setState","prevState","newMedications","initialize","title","index","DefaultPaymentItem","PaymentItem","payment","amount","RecentPaymentWidget","payments","newPayments","DisplayName","currentUserFullName","patientFullName","appointment","patient","physicianFullName","physician","AppointmentTitle","DefaultAppointmentItem","AppointmentItem","setAppointment","id","load","startTime","TodayAppointmentWidget","appointments","newAppointments","DashBoardApp","useSelector","s","_objectWithoutProperties","source","excluded","key","i","sourceKeys","Object","keys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","WidgetRow","useExtendClass","children","WidgetColumns","class","Widget","TitleBar","TitleButtons","TitleButton","data-toggle","onClick","handleClick","icon","TitleToggler","collapseMode","setCollapseMode","data-target","aria-expanded","aria-controls","collapseIcon","expandIcon","WidgetBody","otherProps","WidgetCollapsible","WidgetList","WidgetListItem","WidgetDropdown","labelledBy","WidgetDropdownItem","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","Form","enctype","method","autoComplete","onSubmit","handleSubmit","FormRow","FormGroup","FormButton","disabled","FormSubmit","FormLabel","htmlFor","for","FormLegend","Dropdown","DropdownButton","aria-haspopup","DropdownButtonToggle","DropdownMenu","aria-labelledby","DropdownMenuDivider","DropdownMenuButton","Toggler","DropdownMenuItem","TitleBarLink","tooltip","TitleBarLinks","TitleBarSearch","query","fields","setFields","preventDefault","handleSearch","err","aria-label","aria-describedby","toggleType","asList","NotificationDropDown","UserDropdown","dispatch","useDispatch","credentials","menuLinks","path","menuLink","exact","List","ListItem","ListLink","url","ListButton","Card","CardHeader","CardBody","CardFooter","BodyCard"],"mappings":"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","file":"static/js/6.92af12ef.chunk.js","sourcesContent":["// import ReactTable from \"react-table\";\nimport { useState } from \"react\";\n\n\n// export default function PatientTable(props){\n//         const data = [\n//           {\n//             ingredient: \"Metoprolol succinat\",\n//             tradeName: 'METOPROLOLSUCCINA T 1A 95MG',\n//             strength:'95 mg',\n//             form:'RetTabl',\n//             morning:1,\n//             midday:0,\n//             evening:0,\n//             night: 0,\n//             unit:'stück',\n//             hints:'',\n//             reason:'Herz/Blutdruck'\n//           },\n//           {\n//             ingredient: \"Ramipril\",\n//             tradeName: 'RAMIPRIL RATIOPHARM 5MG',\n//             strength:'5 mg',\n//             form:'Tabl',\n//             morning:1,\n//             midday:0,\n//             evening:0,\n//             night: 0,\n//             unit:'stück',\n//             hints:'',\n//             reason:'Blutdruck'\n//           },\n//           {\n//             ingredient: \"Insulin aspart\",\n//             tradeName: 'NOVORAPID PENFILL ZYLINAMP',\n//             strength:'100 E/ml',\n//             form:'Amp',\n//             morning:20,\n//             midday:0,\n//             evening:20,\n//             night: 0,\n//             unit:'IE',\n//             hints:'Wechseln der Injektionsstellen, unmittelbar vor einer Mahlzeit spritzen',\n//             reason:'Herz/Blutdruck'\n//           },\n//           {\n//             ingredient: \"Simvastatin\",\n//             tradeName: 'SIMVA ARISTO 40MG',\n//             strength:'40 mg',\n//             form:'Tabl',\n//             morning:0,\n//             midday:0,\n//             evening:1,\n//             night: 0,\n//             unit:'stück',\n//             hints:'',\n//             reason:'Blutfette'\n//           },\n//         ];\n//         const columns = [\n//           {\n//             Header: 'Wirkstoff',\n//             accessor: 'ingredient'\n//           },\n//           {\n//             Header: \"Handelsname\",\n//             accessor: \"tradeName\",\n//           },\n//           {\n//             Header: \"Stärke\",\n//             accessor: \"strength\",\n//           },\n//           {\n//             Header: 'Form',\n//             accessor: 'form'\n//           },\n//           {\n//             Header: \"morgens\",\n//             accessor: \"morning\",\n//           },\n//           {\n//             Header: \"mit-tags\",\n//             accessor: \"midday\",\n//           },\n//           {\n//             Header: 'abends',\n//             accessor: 'evening'\n//           },\n//           {\n//             Header: \"zur Nacht\",\n//             accessor: \"night\",\n//           },\n//           {\n//             Header: \"Einheit\",\n//             accessor: \"unit\",\n//           },\n//           {\n//             Header: \"Hinweise\",\n//             accessor: \"hints\"\n//           },\n//           {\n//             Header: \"Grund\",\n//             accessor: \"reason\"\n//           }\n//         ];  \n//            return (  \n//           <div>  \n//               <ReactTable  \n//                   data={data}  \n//                   columns={columns}  \n//               />  \n//           </div>        \n//     )  \n\n// }\n\n\n const data = [\n   {\n     medicinId: 0,\n     ingredient: \"Metoprolol succinat\",\n     tradeName: \"METOPROLOLSUCCINA T 1A 95MG\",\n     strength: \"95 mg\",\n     form: \"RetTabl\",\n     morning: 1,\n     midday: 0,\n     evening: 0,\n     night: 0,\n     unit: \"stück\",\n     hints: \"\",\n     reason: \"Herz/Blutdruck\",\n   },\n   {\n     medicinId: 1,\n     ingredient: \"Ramipril\",\n     tradeName: \"RAMIPRIL RATIOPHARM 5MG\",\n     strength: \"5 mg\",\n     form: \"Tabl\",\n     morning: 1,\n     midday: 0,\n     evening: 0,\n     night: 0,\n     unit: \"stück\",\n     hints: \"\",\n     reason: \"Blutdruck\",\n   },\n   {\n     medicinId: 2,\n     ingredient: \"Insulin aspart\",\n     tradeName: \"NOVORAPID PENFILL ZYLINAMP\",\n     strength: \"100 E/ml\",\n     form: \"Amp\",\n     morning: 20,\n     midday: 0,\n     evening: 20,\n     night: 0,\n     unit: \"IE\",\n     hints:\n       \"Wechseln der Injektionsstellen, unmittelbar vor einer Mahlzeit spritzen\",\n     reason: \"Herz/Blutdruck\",\n   },\n   {\n     medicinId: 3,\n     ingredient: \"Simvastatin\",\n     tradeName: \"SIMVA ARISTO 40MG\",\n     strength: \"40 mg\",\n     form: \"Tabl\",\n     morning: 0,\n     midday: 0,\n     evening: 1,\n     night: 0,\n     unit: \"stück\",\n     hints: \"\",\n     reason: \"Blutfette\",\n   },\n ];\n\nexport default function PatientTable() {\n  const [medicinData, setmedicinData] = useState(data);\n\n  const onChange = (e, medicinId) => {\n    const { name, value } = e.target;\n\n    const editData = medicinData.map((item) =>\n      item.medicinId === medicinId && name ? { ...item, [name]: value } : item\n    );\n\n    setmedicinData(editData);\n  };\n\n  return (\n    <div className=\"patientTable\">\n      <div className=\"container\">\n        <table>\n          <thead>\n            <tr>\n              <th>ingredient</th>\n              <th>tradeName</th>\n              <th>strength</th>\n              <th>form</th>\n              <th>morning</th>\n              <th>midday</th>\n              <th>evening</th>\n              <th>night</th>\n              <th>unit</th>\n              <th>hints</th>\n              <th>reason</th>\n            </tr>\n          </thead>\n          <tbody>\n            {medicinData.map(\n              ({\n                medicinId,\n                ingredient,\n                tradeName,\n                strength,\n                form,\n                morning,\n                midday,\n                evening,\n                night,\n                unit,\n                hints,\n                reason,\n              }) => (\n                <tr key={medicinId}>\n                  <td>\n                    <input\n                      name=\"ingredient\"\n                      value={ingredient}\n                      type=\"text\"\n                      onChange={(e) => onChange(e, medicinId)}\n                      placeholder=\"Type ingredient\"\n                    />\n                  </td>\n                  <td>\n                    <input\n                      name=\"tradeName\"\n                      value={tradeName}\n                      type=\"tradeName\"\n                      onChange={(e) => onChange(e, medicinId)}\n                      placeholder=\"Type tradeName\"\n                    />\n                  </td>\n                  <td>\n                    <input\n                      name=\"strength\"\n                      type=\"text\"\n                      value={strength}\n                      onChange={(e) => onChange(e, medicinId)}\n                      placeholder=\"Type strength\"\n                    />\n                  </td>\n                  <td>\n                    <input\n                      name=\"form\"\n                      type=\"text\"\n                      value={form}\n                      onChange={(e) => onChange(e, medicinId)}\n                      placeholder=\"Type form\"\n                    />\n                  </td>\n                  <td>\n                    <input\n                      name=\"morning\"\n                      type=\"number\"\n                      value={morning}\n                      onChange={(e) => onChange(e, medicinId)}\n                      placeholder=\"Type morning\"\n                    />\n                  </td>\n                  <td>\n                    <input\n                      name=\"midday\"\n                      type=\"number\"\n                      value={midday}\n                      onChange={(e) => onChange(e, medicinId)}\n                      placeholder=\"Type midday\"\n                    />\n                  </td>\n                  <td>\n                    <input\n                      name=\"evening\"\n                      type=\"number\"\n                      value={evening}\n                      onChange={(e) => onChange(e, medicinId)}\n                      placeholder=\"Type evening\"\n                    />\n                  </td>\n                  <td>\n                    <input\n                      name=\"strennightgth\"\n                      type=\"number\"\n                      value={night}\n                      onChange={(e) => onChange(e, medicinId)}\n                      placeholder=\"Type night\"\n                    />\n                  </td>\n                  <td>\n                    <input\n                      name=\"unit\"\n                      type=\"text\"\n                      value={unit}\n                      onChange={(e) => onChange(e, medicinId)}\n                      placeholder=\"Type unit\"\n                    />\n                  </td>\n                  <td>\n                    <input\n                      name=\"hints\"\n                      type=\"text\"\n                      value={hints}\n                      onChange={(e) => onChange(e, medicinId)}\n                      placeholder=\"Type hints\"\n                    />\n                  </td>\n                  <td>\n                    <input\n                      name=\"reason\"\n                      type=\"text\"\n                      value={reason}\n                      onChange={(e) => onChange(e, medicinId)}\n                      placeholder=\"Type reason\"\n                    />\n                  </td>\n                </tr>\n              )\n            )}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\n\n  \n","import React, { useEffect, useState } from 'react';\nimport { BodyCard } from '../../../components/cards';\nimport { PrettyDate } from '../../../components/dates';\nimport { LgIcon } from '../../../components/icons';\nimport { Col, FluidContainer, Row } from '../../../components/layout';\nimport { FullName, Username } from '../../../components/users';\n\n\nfunction WelcomeMessage(props) {\n    const today = new Date();\n    return (\n        <Row className=\"justify-content-between\">\n            <Col className=\"align-items-center\">\n                <h6 className=\"text-muted my-1 py-0\">\n                    {`Welcome ${FullName({user: props.session})}.`}\n                </h6>\n            </Col>\n            <Col className=\"text-muted col-auto\">\n                <PrettyDate date={today} />\n            </Col>\n        </Row>\n    );\n}\n\n\nfunction ServicesAlert(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [count, setCount] = useState(0);\n\n    useEffect(() => {\n        async function getCount() {\n            try {\n                setIsLoading(true);\n                const username = Username({ user: props.session });\n                const page = 0;\n                const limit = 10;\n\n                const response = await fetch(`/api/users/${username}/services?page=${page}&limit=${limit}`, {\n                    headers: {\n                        'Authorization': `Bearer ${props.session.authToken}`\n                    }\n                });\n\n                let data = await response.json();\n                if (!response.ok) {\n                  throw new Error(data.message);\n                }\n\n                setCount(data.length);\n            } catch (err) {\n                console.error(`Failed to get count of services. ${err}`);\n            } finally {\n                setIsLoading(false);\n            }\n        }\n\n        getCount();\n    }, [props.session]);\n\n    if (isLoading || count > 0) {\n        return null;\n    } else {\n        return (\n            <Row className=\"mt-3\">\n                <Col>\n                    <div className=\"alert alert-danger d-flex p-2\" role=\"alert\">\n                        <LgIcon className=\"mx-1\">person</LgIcon>\n                        <p className=\"my-0\">\n                            You have not added any services yet. Add a service to your profile \n                            to help patients schedule new appointments with you.\n                        </p>\n                    </div>\n                </Col>\n            </Row>\n        );\n    }\n}\n\n\nexport default function Banner(props) {\n    const isCurrentUserPhysician = Boolean(props.session.isPhysician);\n    \n    return (\n        <BodyCard className=\"rounded\">\n            <FluidContainer>\n                <WelcomeMessage \n                    session={props.session}\n                />\n                {(isCurrentUserPhysician) &&\n                    <ServicesAlert \n                        session={props.session}\n                    />\n                }\n            </FluidContainer>\n        </BodyCard>\n    );\n}","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Col, FluidContainer, Row } from '../../../components/layout';\nimport { Loader } from '../../../components/loaders';\nimport { TitleBar, Widget, WidgetBody, WidgetList, WidgetListItem } from '../../../components/widgets';\n\n\nfunction DefaultMedicationItem(props) {\n    return (\n        <WidgetListItem>\n            <FluidContainer>\n                <Row>\n                    <Col className=\"md-font-sm text-center text-muted\">No medications available</Col>\n                </Row>\n            </FluidContainer>\n        </WidgetListItem>\n    );\n}\n\n\nfunction ViewAllItem(props) {\n    return (\n        <WidgetListItem>\n            <Link to={`/users/${props.session.username}/medications`}>\n                <FluidContainer>\n                    <Row>\n                        <Col className=\"md-font-sm text-center text-muted\">View All</Col>\n                    </Row>\n                </FluidContainer>\n            </Link>\n        </WidgetListItem>\n    );\n}\n\n\nfunction MedicationItem(props) {\n    return(\n        <WidgetListItem className=\"list-group-item-action\">\n            <FluidContainer>\n                <Row>\n                    <Col className=\"align-self-center\">\n                        <Row>\n                            <Col>\n                                <Link to={`/medications/${props.medication.appointmentId}`}\n                                    className=\"font-weight-bold text-truncate\">\n                                    {props.medication.name}\n                                </Link>\n                            </Col>\n                            <Col className=\"col-auto\">\n                                {`${props.medication.dosage} mg`}\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </FluidContainer>\n        </WidgetListItem>\n    );\n}\n\n\nexport default function RecentMedicationWidget(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [state, setState] = useState({\n        medications: [],\n        limit: 5\n    });\n\n    useEffect(() => {\n        async function initialize() {\n            try {\n                setIsLoading(true);\n                const username = props.session.username;\n                const page = 0;\n\n                const response = await fetch(`/api/users/${username}/medications?page=${page}&limit=${state.limit}`, {\n                  headers: {\n                    'Authorization': `Bearer ${props.session.authToken}`\n                  }\n                });\n          \n                let data = await response.json();\n                if (!response.ok) {\n                  throw new Error(data.message);\n                }\n\n                setState(prevState => {\n                    const newMedications = [...prevState.medications, ...data];\n\n                    return {\n                        ...prevState,\n                        medications: newMedications\n                    }\n                });\n            } catch (err) {\n                console.error(`Failed to to load recent medications. ${err}`);\n            } finally {\n                setIsLoading(false);\n            }\n        }\n\n        initialize();\n    }, [props.session, state.limit]);\n\n    return (\n        <Widget>\n            <TitleBar title=\"Recent Medications\" />\n            {\n                (isLoading) ?\n                <>\n                    <WidgetBody>\n                        <Loader isLoading={true} />\n                    </WidgetBody>\n                </> :\n                <>\n                    <WidgetList>\n                        {(state.medications.length !== 0) ?\n                            <>\n                                {state.medications.map((medication, index) => (\n                                    <MedicationItem \n                                        key={index}\n                                        medication={medication}\n                                    />\n                                ))}\n                                <ViewAllItem session={props.session} />\n                            </> :\n                            <DefaultMedicationItem />\n                        }\n                    </WidgetList>\n                </>\n            }\n        </Widget>\n    );\n}","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { NumericDate } from '../../../components/dates';\nimport { Col, FluidContainer, Row } from '../../../components/layout';\nimport { Loader } from '../../../components/loaders';\nimport { Currency } from '../../../components/users';\nimport { TitleBar, Widget, WidgetBody, WidgetList, WidgetListItem } from '../../../components/widgets';\n\n\nfunction DefaultPaymentItem(props) {\n    return (\n        <WidgetListItem>\n            <FluidContainer>\n                <Row>\n                    <Col className=\"md-font-sm text-center text-muted\">No payments available</Col>\n                </Row>\n            </FluidContainer>\n        </WidgetListItem>\n    );\n}\n\n\nfunction ViewAllItem(props) {\n    return (\n        <WidgetListItem>\n            <Link to={`/users/${props.session.username}/payments`}>\n                <FluidContainer>\n                    <Row>\n                        <Col className=\"md-font-sm text-center text-muted\">View All</Col>\n                    </Row>\n                </FluidContainer>\n            </Link>\n        </WidgetListItem>\n    );\n}\n\n\nfunction PaymentItem(props) {\n    const date = new Date(props.payment.date);\n    return(\n        <WidgetListItem className=\"list-group-item-action\">\n            <FluidContainer>\n                <Row>\n                    <Col className=\"align-self-center\">\n                        <Row>\n                            <Col>\n                                <Link to={`/appointments/${props.payment.appointmentId}/payments`}\n                                    className=\"font-weight-bold text-truncate\">\n                                    <Currency value={props.payment.amount} />\n                                </Link>\n                            </Col>\n                            <Col className=\"col-auto\">\n                                <NumericDate date={date} />\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </FluidContainer>\n        </WidgetListItem>\n    );\n}\n\n\nexport default function RecentPaymentWidget(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [state, setState] = useState({\n        payments: [],\n        limit: 5\n    });\n\n    useEffect(() => {\n        async function initialize() {\n            try {\n                setIsLoading(true);\n                const username = props.session.username;\n                const page = 0;\n\n                const response = await fetch(`/api/users/${username}/payments?page=${page}&limit=${state.limit}`, {\n                  headers: {\n                    'Authorization': `Bearer ${props.session.authToken}`\n                  }\n                });\n          \n                let data = await response.json();\n                if (!response.ok) {\n                  throw new Error(data.message);\n                }\n\n                setState(prevState => {\n                    const newPayments = [...prevState.payments, ...data];\n\n                    return {\n                        ...prevState,\n                        payments: newPayments\n                    }\n                });\n            } catch (err) {\n                console.error(`Failed to to load recent payments. ${err}`);\n            } finally {\n                setIsLoading(false);\n            }\n        }\n\n        initialize();\n    }, [props.session, state.limit]);\n\n    return (\n        <Widget>\n            <TitleBar title=\"Recent Payments\" />\n            {\n                (isLoading) ?\n                <>\n                    <WidgetBody>\n                        <Loader isLoading={true} />\n                    </WidgetBody>\n                </> :\n                <>\n                    <WidgetList>\n                        {(state.payments.length !== 0) ?\n                            <>\n                                {state.payments.map((payment, index) => (\n                                    <PaymentItem \n                                        key={index}\n                                        payment={payment}\n                                    />\n                                ))}\n                                <ViewAllItem session={props.session} />\n                            </> :\n                            <DefaultPaymentItem />\n                        }\n                    </WidgetList>\n                </>\n            }\n        </Widget>\n    );\n}","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FullTime, PrettyDate } from '../../../components/dates';\nimport { Col, FluidContainer, Row } from '../../../components/layout';\nimport { Loader } from '../../../components/loaders';\nimport { FullName } from '../../../components/users';\nimport { TitleBar, Widget, WidgetBody, WidgetList, WidgetListItem } from '../../../components/widgets';\n\n\nfunction DisplayName(props) {\n    const currentUserFullName = FullName({ user: props.session });\n    const patientFullName = FullName({ user: props.appointment.patient });\n    const physicianFullName = FullName({ user: props.appointment.physician });\n\n    if (currentUserFullName === patientFullName) {\n        return physicianFullName;\n    } else {\n        return patientFullName;\n    }\n}\n\n\nfunction AppointmentTitle(props) {\n    return (props.appointment) ? props.appointment.title: \"\";\n}\n\n\nfunction DefaultAppointmentItem(props) {\n    return (\n        <WidgetListItem>\n            <FluidContainer>\n                <Row>\n                    <Col className=\"md-font-sm text-center text-muted\">No appointments available</Col>\n                </Row>\n            </FluidContainer>\n        </WidgetListItem>\n    );\n}\n\n\nfunction ViewAllItem(props) {\n    return (\n        <WidgetListItem>\n            <Link to='/appointments?view=waiting'>\n                <FluidContainer>\n                    <Row>\n                        <Col className=\"md-font-sm text-center text-muted\">View All</Col>\n                    </Row>\n                </FluidContainer>\n            </Link>\n        </WidgetListItem>\n    );\n}\n\n\nfunction AppointmentItem(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [appointment, setAppointment] = useState({});\n\n    useEffect(() => {\n        async function load() {\n            try {\n                setIsLoading(true);\n\n                const response = await fetch(`/api/appointments/${props.appointment.id}`, {\n                    headers: {\n                        'Authorization': `Bearer ${props.session.authToken}`\n                    }\n                });\n            \n                let appointment = await response.json();\n                if (!response.ok) {\n                    throw new Error(appointment.message);\n                }\n\n                setAppointment(appointment);\n            } catch (err) {\n                console.error(`Failed to load appointment- ${props.appointment.id}. ${err}`);\n            } finally {\n                setIsLoading(false);\n            }\n        }\n\n        load();\n    }, [props.appointment, props.session]);\n\n    return(\n        <WidgetListItem className=\"list-group-item-action\">\n            <FluidContainer>\n                <Row>\n                    {\n                        (isLoading) ?\n                        <>\n                            <Loader isLoading={true} />\n                        </> :\n                        <>\n                            <Col className=\"col-auto align-self-center\">\n                                <p className=\"text-center my-0\">\n                                    <FullTime date={appointment.startTime} />\n                                </p>\n                                <p className=\"md-font-sm text-center text-muted my-0\">\n                                    <PrettyDate date={appointment.startTime} />\n                                </p>\n                            </Col>\n                            <Col className=\"align-self-center\">\n                                <p className=\"my-0\">\n                                    <Link to={`/appointments/${appointment.id}`}\n                                        className=\"text-truncate font-weight-bold\">\n                                        <DisplayName\n                                            session={props.session}\n                                            appointment={appointment}\n                                        />\n                                    </Link>\n                                </p>\n                                <p className=\"md-font-sm text-truncate text-muted my-0\">\n                                    <AppointmentTitle\n                                        appointment={appointment}\n                                    />\n                                </p>\n                            </Col>\n                        </>\n                    }\n                </Row>\n            </FluidContainer>\n        </WidgetListItem>\n    );\n}\n\n\nexport default function TodayAppointmentWidget(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [state, setState] = useState({\n        appointments: [],\n        limit: 10\n    });\n\n    useEffect(() => {\n        async function initialize() {\n            try {\n                setIsLoading(true);\n                const page = 0;\n                const response = await fetch(`/api/appointments?view=waiting&page=${page}&limit=${state.limit}`, {\n                  headers: {\n                    'Authorization': `Bearer ${props.session.authToken}`\n                  }\n                });\n          \n                let data = await response.json();\n                if (!response.ok) {\n                  throw new Error(data.message);\n                }\n          \n                setState(prevState => {\n                    const newAppointments = [...prevState.appointments, ...data];\n\n                    return {\n                        ...prevState,\n                        appointments: newAppointments\n                    }\n                });\n            } catch (err) {\n                console.error(`Failed to to load waiting appointments. ${err}`);\n            } finally {\n                setIsLoading(false);\n            }\n        }\n\n        initialize();\n    }, [props.session, state.limit]);\n\n    return (\n        <Widget>\n            <TitleBar title=\"Today's Appointments\" />\n            {\n                (isLoading) ?\n                <>\n                    <WidgetBody>\n                        <Loader isLoading={true} />\n                    </WidgetBody>\n                </> :\n                <>\n                    <WidgetList>\n                        {(state.appointments.length !== 0) ?\n                            <>\n                                {state.appointments.map((appointment, index) => (\n                                    <AppointmentItem \n                                        key={index}\n                                        session={props.session}\n                                        appointment={appointment}\n                                    />\n                                ))}\n                                <ViewAllItem />\n                            </> :\n                            <DefaultAppointmentItem />\n                        }\n                    </WidgetList>\n                </>\n            }\n        </Widget>\n    );\n}","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Col, FluidContainer, Row } from \"../../components/layout.js\";\nimport { WidgetColumns, WidgetRow } from \"../../components/widgets.js\";\nimport PatientTable from \"./widgets/patientTable\";\nimport TitleBar from \"../home/titleBar\";\nimport Banner from \"./widgets/banner\";\nimport RecentMedicationWidget from \"./widgets/recentMedications\";\nimport RecentPaymentWidget from \"./widgets/recentPayments\";\nimport TodayAppointmentWidget from \"./widgets/todaysAppointment\";\n\nexport default function DashBoardApp(props) {\n  const session = useSelector((s) => s.session);\n\n  return (\n    <>\n      <TitleBar title=\"Dashboard\" />\n      <Row className=\"flex-grow-1\">\n        <Col className=\"pt-3\">\n          <FluidContainer>\n            <WidgetRow>\n              <Col>\n                <Banner session={session} />\n              </Col>\n            </WidgetRow>\n            <WidgetRow>\n              <Col>\n                <PatientTable />\n              </Col>\n            </WidgetRow>\n            <WidgetColumns>\n              <TodayAppointmentWidget session={session} />\n              {!session.isPhysician && (\n                <RecentMedicationWidget session={session} />\n              )}\n              <RecentPaymentWidget session={session} />\n            </WidgetColumns>\n          </FluidContainer>\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React, { useState } from 'react';\nimport { useExtendClass } from \"./hooks\";\nimport { Row } from './layout';\nimport { BodyCard, Card, CardBody } from './cards';\nimport { List, ListItem, ListLink } from './lists';\nimport { LgIcon } from './icons';\nimport { Dropdown, DropdownButton, DropdownMenu, DropdownMenuButton } from './dropdown';\n\n\nexport function WidgetRow(props) {\n    return (\n        <Row className={useExtendClass(\"mb-3\", props.className)}>\n            {props.children}\n        </Row>\n    );\n}\n\n\nexport function WidgetDeck(props) {\n    return (\n        <div class={useExtendClass(\"card-deck mb-3\", props.className)}>\n            {props.children}\n        </div>\n    );\n}\n\n\nexport function WidgetColumns(props) {\n    return (\n        <div class={useExtendClass(\"card-columns mb-3\", props.className)}>\n            {props.children}\n        </div>\n    );\n}\n\n\nexport function Widget(props) {\n    return (\n        <Card className={useExtendClass(\"md-widget mb-3\", props.className)}>\n            {props.children}\n        </Card>\n    );\n}\n\n\nexport function InfoWidget(props) {\n    return (\n        <BodyCard className={useExtendClass(\"md-widget mb-3\", props.className)}>\n            {props.children}\n        </BodyCard>\n    );\n}\n\n\nexport function TitleBar(props) {\n    return (\n        <nav className=\"card-header navbar md-title px-3 py-1\">\n            <h6 className=\"navbar-brand text-muted my-1 py-0\">{props.title}</h6>\n            {props.children}\n        </nav>\n    );\n}\n\n\nexport function TitleButtons(props) {  \n    return (\n        <ul className={useExtendClass(\"nav\", props.className)}>\n            {props.children}\n        </ul>\n    );\n}\n\n\nexport function TitleButton(props) {\n    return (\n        <button type=\"button\" data-toggle=\"tooltip\" title={props.name} \n            className=\"btn btn-sm p-2 d-flex align-items-center\" onClick={props.handleClick}>\n            <LgIcon>{props.icon}</LgIcon>\n        </button>\n    );\n}\n\n\nexport function TitleToggler(props) {\n    const [collapseMode, setCollapseMode] = useState(false);\n\n    async function handleClick(e) {\n        setCollapseMode(!collapseMode);\n    }\n\n    return (\n        <button type=\"button\" data-toggle=\"collapse\" data-target={`#${props.target}`}\n            class=\"btn btn-sm p-2 d-flex align-items-center\"\n            onClick={handleClick} aria-expanded=\"false\" aria-controls={props.target}>\n            <LgIcon>{(collapseMode) ? props.collapseIcon: props.expandIcon }</LgIcon>\n        </button>\n    );\n}\n\n\nexport function WidgetBody(props) {\n    const { className, ...otherProps } = props;\n    return (\n        <CardBody className={useExtendClass(\"px-3 py-2\", className)} { ...otherProps } >\n            {props.children}\n        </CardBody>\n    );\n}\n\n\nexport function WidgetCollapsible(props) {\n    const { id, className, ...otherProps } = props;\n    return (\n        <WidgetBody id={id} { ...otherProps }\n            className={useExtendClass(\"collapse\", className)}>\n            {props.children}\n        </WidgetBody>\n    );\n}\n\n\nexport function WidgetList(props) {\n    return (\n        <List className=\"list-group-flush\">\n            {props.children}\n        </List>\n    );\n}\n\n\nexport function WidgetListItem(props) {\n    return (\n        <ListItem className=\"py-2 px-0\">\n            {props.children}\n        </ListItem>\n    );\n}\n\n\nexport function WidgetListLink(props) {\n    return (\n        <ListLink url={props.url} className=\"py-2 px-0\">\n            {props.children}\n        </ListLink>\n    );\n}\n\n\nexport function WidgetDropdown(props) {\n    return (\n        <Dropdown>\n            <DropdownButton id={props.id} className=\"p-2 d-flex align-items-center\">\n                <LgIcon>more_horiz</LgIcon>\n            </DropdownButton>\n            <DropdownMenu labelledBy={props.id} className=\"dropdown-menu-right\">\n                {props.children}\n            </DropdownMenu>\n        </Dropdown>\n    );\n}\n\n\nexport function WidgetDropdownItem(props) {\n    const { className, ...otherProps} = props;\n    return (\n        <DropdownMenuButton \n            className={useExtendClass(\"d-flex align-items-center\", className)}\n            {...otherProps}\n        >\n            {props.children}\n        </DropdownMenuButton>\n    );\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from 'react';\nimport { useExtendClass } from \"./hooks.js\";\n\n\n/* Form layout components */\nexport function Form(props) {\n    const enctype = (props.enctype) ? props.enctype: \"application/x-www-form-urlencoded\";\n\n    return (\n        <form method=\"post\" autoComplete={props.autoComplete} enctype={enctype}\n            className={useExtendClass(\"\", props.className)} onSubmit={props.handleSubmit}>\n            {props.children}\n        </form>\n    );\n}\n\n\nexport function FormRow(props) {  \n    return (\n        <div className={useExtendClass(\"form-row\", props.className)}>\n            {props.children}\n        </div>\n    );\n}\n\n\nexport function FormGroup(props) {  \n    return (\n        <div className={useExtendClass(\"form-group\", props.className)}>\n            {props.children}\n        </div>\n    );\n}\n\n\n/* Form element components. */\nexport function FormButton(props) {  \n    return (\n        <button type={(props.type) ? props.type: \"button\"} disabled={props.disabled}\n            className={useExtendClass(\"btn\", props.className)} onClick={props.handleClick}>\n            {props.children}\n        </button>\n    );\n}\n\n\nexport function FormSubmit(props) {\n    return (\n        <FormButton type=\"submit\" disabled={props.disabled}\n            className={useExtendClass(\"btn-primary\", props.className)}>\n            {props.children}\n        </FormButton>\n    );\n}\n\n\nexport function FormText(props) {  \n    return (\n        <input type=\"text\" id={props.id} value={props.value} readOnly \n            className={useExtendClass(\"form-control-plaintext\", props.className)}\n        />\n    );\n}\n\n\nexport function FormLabel(props) {  \n    return (\n        <label htmlFor={props.for} className={useExtendClass(\"col-form-label\", props.className)}>\n            {props.children}\n        </label>\n    );\n  }\n\n\nexport function FormLegend(props) {  \n    return (\n        <legend htmlFor={props.for} className={useExtendClass(\"col-form-label\", props.className)}>\n            {props.children}\n        </legend>\n    );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useExtendClass } from './hooks';\n\n\nexport function Dropdown(props) {\n    return (\n        <div className={useExtendClass(\"dropdown\", props.className)}>\n            {props.children}\n        </div>\n    );\n}\n\n\nexport function DropdownButton(props) {\n    return (\n        <button type=\"button\" id={props.id} data-toggle=\"dropdown\" \n            className={useExtendClass(\"btn\", props.className)}\n            aria-haspopup=\"true\" aria-expanded=\"false\">\n            {props.children}\n        </button>\n    );\n}\n\n\nexport function DropdownButtonToggle(props) {\n    return (\n        <button type=\"button\" id={props.id} data-toggle=\"dropdown\"\n            className={useExtendClass(\"btn dropdown-toggle\", props.className)}\n            aria-haspopup=\"true\" aria-expanded=\"false\">\n            {props.children}\n        </button>\n    );\n}\n\nexport function DropdownMenu(props) {\n    return (\n        <div aria-labelledby={props.labelledBy}\n            className={useExtendClass(\"dropdown-menu\", props.className)} >\n            {props.children}\n        </div>\n    );\n}\n\nexport function DropdownMenuDivider(props) {\n    return (\n        <div className={useExtendClass(\"dropdown-divider\", props.className)}></div>\n    );\n}\n\nexport function DropdownMenuLink(props) {\n    return (\n        <Link \n            to={props.url} exact={props.exact}\n            className={useExtendClass(\"dropdown-item\", props.className)}\n        >\n                {props.children}\n        </Link>\n    );\n}\n\nexport function DropdownMenuButton(props) {\n    return (\n        <button type=\"button\" onClick={props.handleClick}\n            className={useExtendClass(\"dropdown-item\", props.className)}\n                name={props.name} value={props.value} disabled={Boolean(props.disabled)}\n        >\n            {props.children}\n        </button>\n    );\n}","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { DropdownButton } from '../../components/buttons';\nimport { DropdownButtonToggle } from '../../components/dropdown';\nimport { Form } from '../../components/form';\nimport { useExtendClass } from '../../components/hooks';\nimport { LgIcon } from '../../components/icons';\nimport { Nav, NavBar, NavBrand, NavCollapsible, NavDropdown, NavDropdownLink, NavDropdownMenu, \n    NavDropdownMenuHeader, NavDropdownMenuItem, NavLink, NavLinks, NavToggler } from '../../components/navs';\nimport { ProfilePhoto } from '../../components/users';\n\n\nfunction Toggler(props) {\n    const { className, icon, ...otherProps } = props;\n    return (\n        <NavToggler\n            className={useExtendClass(\"md-btn p-2 mx-1\", className)}\n            {...otherProps}\n        >\n            <LgIcon className=\"d-flex align-items-center\">{icon}</LgIcon>\n        </NavToggler>\n    );\n}\n\n\nfunction DropdownMenuItem(props) {\n    const { title, icon, ...otherProps } = props;\n    return (\n        <NavDropdownMenuItem\n            className=\"md-mi d-flex align-items-center\"\n            {...otherProps}\n        >\n            <LgIcon>{icon}</LgIcon>\n            <p className=\"my-0 pl-2 text-truncate\">{title}</p>\n        </NavDropdownMenuItem>\n    );\n}\n\n\nexport function TitleBarLink(props) {\n    const { className, title, icon, ...otherProps } = props;\n    return (\n        <NavLink\n            { ...otherProps }\n            className={useExtendClass(\"md-btn mx-1 p-2 d-flex align-items-center\", className)}\n            tooltip={title}\n            role=\"button\"\n        >\n            <LgIcon>{icon}</LgIcon>\n            <p className=\"my-0 pl-2 text-truncate d-md-none\">{title}</p>\n        </NavLink>\n    );\n}\n\n\nexport function TitleBarLinks(props) {\n    return (\n        <NavLinks>\n            {props.children}\n        </NavLinks>\n    );\n}\n\n\nexport function TitleBarSearch(props) {\n    const [fields, setFields] = useState({\n        query: \"\"\n    });\n\n    async function handleChange(e) {\n        setFields({\n            ...fields,\n            [e.target.name]: e.target.value\n        });\n    }\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n        try {\n            if (props.handleSearch) {\n                props.handleSearch(fields.query);\n            }\n        } catch (err) {\n            console.error(`Failed to handle search query. ${err}`);\n        }\n    }\n\n    return (\n        <Form handleSubmit={handleSubmit}\n            className={useExtendClass(\"form-inline mx-1 my-2 my-lg-0\", props.className)} >\n            <div className=\"input-group w-100\">\n                <input id=\"titlebarSearch01\" type=\"text\" className=\"form-control\" name=\"query\"\n                    placeholder={props.placeholder} value={fields.query} onChange={handleChange}\n                        aria-label=\"Search Query\" aria-describedby=\"titlebarSearch02\" />\n                <div className=\"input-group-append\">\n                    <button id=\"titlebarSearch02\" type=\"button\" \n                        className=\"btn btn-sm btn-outline-secondary\" >\n                        <LgIcon>search</LgIcon>\n                    </button>\n                </div>\n            </div>\n        </Form>\n    );\n}\n\n\nexport default function TitleBar(props) {\n    const session = useSelector(s => s.session);\n\n    return (\n        <NavBar className=\"navbar-expand-md navbar-light row md-tbar sticky-top justify-content-start\">\n            <Toggler\n                target=\"sideBar01\"\n                icon=\"menu\"\n                toggleType=\"modal\"\n            />\n            <NavBrand className=\"mr-auto p-1 font-weight-bold\">{props.title}</NavBrand>\n            {props.children && \n                <>\n                    <Toggler\n                        target=\"titleBarNav01\"\n                        icon=\"more_vert\"\n                    />\n                    <NavCollapsible \n                        id=\"titleBarNav01\"\n                        className=\"justify-content-end order-last order-md-4\"\n                    >\n                        {props.children}\n                    </NavCollapsible>\n                </>\n            }\n            <Nav className=\"order-md-last\" asList={true}>\n                <NotificationDropDown />\n                <UserDropdown\n                    session={session}\n                    user={session}\n                />\n            </Nav>\n        </NavBar>\n    );\n}\n\n\n// Session based components.\nfunction UserDropdown(props) {\n    const dispatch = useDispatch();\n\n    async function signOut(e) {\n        e.preventDefault();\n        try {\n            const response = await fetch(`/api/auth/signout`, {\n                method: 'GET',\n                credentials: 'same-origin',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${props.session.authToken}`\n                }\n            });\n        \n            let data = await response.json();\n            if (!response.ok) {\n                throw new Error(data.message);\n            }\n\n            dispatch({\n                type: \"session/reset\"\n            });\n        } catch (err) {\n            console.error(`Failed to sign out. ${err}`);\n        }\n    }\n\n    const menuLinks = [\n        {\n            path: `/users/${props.user.username}`,\n            title: \"Profile\",\n            icon: \"person\"\n        },\n        {\n            path: \"/settings\",\n            title: \"Settings\",\n            icon: \"settings\"\n        },\n        {\n            title: \"Sign Out\",\n            icon: \"logout\",\n            handleClick: signOut\n        }\n    ];\n\n    return (\n        <NavDropdown>\n            <NavDropdownLink className=\"px-0 mx-1 d-flex align-items-center\">\n                <ProfilePhoto \n                    className=\"md-pfl-xs md-pfl-round\"\n                    session={props.session} \n                    user={props.user}\n                />\n            </NavDropdownLink>\n            <NavDropdownMenu className=\"dropdown-menu-right\">\n                {menuLinks.map((menuLink, index) => (\n                    <DropdownMenuItem\n                        key={index}\n                        path={menuLink.path}\n                        exact={menuLink.exact}\n                        title={menuLink.title}\n                        icon={menuLink.icon}\n                        handleClick={menuLink.handleClick}\n                    />\n                ))}\n            </NavDropdownMenu>\n        </NavDropdown>\n    );\n}\n\n\nfunction NotificationDropDown(props) {\n    return (\n        <NavDropdown className=\"mx-1 my-2\">\n            <DropdownButtonToggle className=\"md-btn p-2 d-flex align-items-center\">\n                <LgIcon>notifications</LgIcon>\n            </DropdownButtonToggle>\n            <NavDropdownMenu className=\"dropdown-menu-right\">\n                <NavDropdownMenuHeader>\n                    Coming Soon!\n                </NavDropdownMenuHeader>\n            </NavDropdownMenu>\n        </NavDropdown>\n    );\n}","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { useExtendClass } from \"./hooks.js\";\n\n\n/* Component Definitions */\nexport function List(props) {\n    return (\n        <div className={useExtendClass(\"list-group\", props.className)}>\n            {props.children}\n        </div>\n    );\n}\n\n\nexport function FlushedList(props) {\n    return (\n        <List className={useExtendClass(\"list-group-flush\", props.className)}>\n            {props.children}\n        </List>\n  );\n}\n\n\nexport function ListItem(props) {  \n    return (\n        <div className={useExtendClass(\"list-group-item\", props.className)}>\n            {props.children}\n        </div>\n    );\n}\n\n\nexport function ListLink(props) {  \n    return (\n        <Link to={props.url} \n            className={useExtendClass(\"list-group-item list-group-action\", props.className)}>\n            {props.children}\n        </Link>\n    );\n}\n\n\nexport function ListButton(props) {\n    const { className, handleClick, ...otherProps } = props;\n\n    return (\n        <button type=\"button\" onClick={handleClick} { ...otherProps }\n            className={useExtendClass(\"list-group-item list-group-action\", className)}>\n            {props.children}\n        </button>\n    );\n}","import React from 'react';\nimport { useExtendClass } from \"./hooks.js\";\n\n\nexport function Card(props) {\n    const { className, ...otherProps } = props;\n    return (\n        <div className={useExtendClass(\"card\", className)} { ...otherProps } >\n            {props.children}\n        </div>\n    );\n}\n\n\nexport function CardHeader(props) {\n    const { className, ...otherProps } = props;\n    return (\n        <div className={useExtendClass(\"card-header\", className)} { ...otherProps } >\n            {props.children}\n        </div>\n    );\n}\n\n\nexport function CardBody(props) {\n    const { className, ...otherProps } = props;\n    return (\n        <div className={useExtendClass(\"card-body\", className)} { ...otherProps } >\n            {props.children}\n        </div>\n    );\n}\n\n\nexport function CardFooter(props) {\n    const { className, ...otherProps } = props;\n    return (\n        <div className={useExtendClass(\"card-footer\", className)} { ...otherProps } >\n            {props.children}\n        </div>\n    );\n}\n\n\nexport function BodyCard(props) {\n    const { className, ...otherProps } = props;\n    return (\n        <div className={useExtendClass(\"card card-body\", className)} { ...otherProps } >\n            {props.children}\n        </div>\n    );\n}\n"],"sourceRoot":""}