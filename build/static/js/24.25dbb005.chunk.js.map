{"version":3,"sources":["containers/users/user/views/detailView/services/addSection.js","containers/users/user/views/detailView/services/listSection.js","containers/users/user/views/detailView/services/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["AddSection","props","useState","errorMessage","setErrorMessage","name","rate","fields","setFields","handleChange","e","a","target","value","preventDefault","newService","fetch","user","username","method","credentials","headers","session","authToken","body","JSON","stringify","response","json","data","ok","Error","message","id","appendService","title","content","console","error","className","handleSubmit","role","for","type","onChange","placeholder","min","step","DefaultServiceItem","ServiceItem","handleDelete","service","fromCurrentUser","Username","handleClick","ListSection","services","length","map","index","deleteService","ServiceSection","limit","state","setState","url","searchParams","URLSearchParams","append","Math","ceil","toString","newServices","prevState","updatedServices","filter","disableEdit","expandIcon","collapseIcon","callback","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError"],"mappings":"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","file":"static/js/24.25dbb005.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Form, FormGroup, FormLabel, FormRow, \n    FormSubmit } from \"../../../../../../components/form\";\n\n\nexport default function AddSection(props) {\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    const [fields, setFields] = useState({\n        name: \"\",\n        rate: 0\n    });\n\n    async function handleChange(e) {\n        setFields({\n            ...fields,\n            [e.target.name]: e.target.value\n        });\n    }\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n        try {\n            const newService = {\n                name: fields.name,\n                rate: fields.rate\n            };\n\n            const response = await fetch(`/api/users/${props.user.username}/services`, {\n                method: 'POST',\n                credentials: 'same-origin',\n                headers: {\n                  'Content-Type': 'application/json',\n                  'Authorization': `Bearer ${props.session.authToken}`\n                },\n                body: JSON.stringify(newService)\n            });\n\n            let data = await response.json();\n            if (!response.ok) {\n                throw new Error(data.message);\n            }\n\n            newService.id = data.id;\n            if (props.appendService) {\n                props.appendService(newService);\n            }\n\n            setFields({\n                ...fields,\n                title: \"\",\n                content: \"\"\n            });\n        } catch (err) {\n            console.error(`Failed to add new service. ${err}`);\n            setErrorMessage(err.message);\n        }\n    }\n\n    return (\n        <Form className=\"container-fluid\" handleSubmit={handleSubmit}>\n            {(errorMessage) &&\n                <FormRow className=\"justify-content-center\">\n                    <div className=\"alert alert-danger\" role=\"alert\">{errorMessage}</div>\n                </FormRow>\n            }\n            <FormRow>\n                <FormGroup className=\"col-12 col-md\">\n                    <FormLabel for=\"servicesForm01\" className=\"md-font-sm text-muted\">\n                        Service Name\n                    </FormLabel>\n                    <input id=\"servicesForm01\" name=\"name\" type=\"text\" \n                        className=\"form-control\" value={fields.name} onChange={handleChange}\n                            placeholder=\"Try &quot;Health check-up&quot;\"\n                    />\n                </FormGroup>\n                <FormGroup className=\"col-12 col-md\">\n                    <FormLabel for=\"servicesForm02\" className=\"md-font-sm text-muted\">\n                        Rate ($)\n                    </FormLabel>\n                    <input id=\"servicesForm02\" name=\"rate\" type=\"number\" \n                        className=\"form-control\" value={fields.rate} onChange={handleChange}\n                            placeholder=\"00.00\" min=\"0\" step=\"0.01\" \n                    />\n                </FormGroup>\n                <FormGroup className=\"col-sm-auto align-self-end\">\n                    <FormSubmit>Add</FormSubmit>\n                </FormGroup>\n            </FormRow>\n        </Form>\n    );\n}","import React from 'react';\nimport { Col, FluidContainer, Row } from '../../../../../../components/layout';\nimport { Currency, Username } from '../../../../../../components/users';\nimport { WidgetList, WidgetListItem, WidgetDropdown, \n    WidgetDropdownItem } from '../../../../../../components/widgets';\n\n\nfunction DefaultServiceItem(props) {\n    return (\n        <WidgetListItem>\n            <FluidContainer>\n                <Row>\n                    <Col className=\"md-font-sm text-center text-muted\">No service available</Col>\n                </Row>\n            </FluidContainer>\n        </WidgetListItem>\n    );\n}\n\n\nfunction ServiceItem(props) {\n    async function handleDelete(e) {\n        e.preventDefault();\n        \n        if (props.handleDelete) {\n            props.handleDelete(props.service.id);\n        }\n    }\n\n    const username = props.service.username;\n    const currentUsername = Username({ user: props.session });\n    const fromCurrentUser = (currentUsername === username) ? true : false;\n\n    return (\n        <WidgetListItem>\n            <FluidContainer>\n                <Row>\n                    <Col className=\"align-self-center\">\n                        <Row>\n                            <Col className=\"align-self-center\">\n                                {props.service.name}\n                            </Col>\n                            <Col className=\"col-auto\">\n                                <Currency value={props.service.rate} />\n                            </Col>\n                        </Row>\n                    </Col>\n                    <Col className=\"col-auto\">\n                        {fromCurrentUser &&\n                            <WidgetDropdown>\n                                <WidgetDropdownItem handleClick={handleDelete}>Delete</WidgetDropdownItem>\n                            </WidgetDropdown>\n                        }\n                    </Col>\n                </Row>\n            </FluidContainer>\n        </WidgetListItem>\n    );\n}\n\n\nexport default function ListSection(props) {\n    return (\n        <WidgetList>\n            {(props.services.length !== 0) ?\n                <>\n                    {props.services.map((service, index) => (\n                        <ServiceItem \n                            key={index}\n                            session={props.session}\n                            service={service}\n                            handleDelete={props.deleteService}\n                        />\n                    ))}\n                </> :\n                <DefaultServiceItem />\n            }\n        </WidgetList>\n    );\n}","import React, { useState } from 'react';\nimport { AutoLoader } from '../../../../../../components/loaders';\nimport { TitleBar, TitleToggler, Widget, \n    WidgetCollapsible } from '../../../../../../components/widgets';\n\nimport AddSection from './addSection';\nimport ListSection from './listSection';\n\n\nexport default function ServiceSection(props) {\n    const [state, setState] = useState({\n        services: [],\n        limit: 10\n    });\n\n    async function appendServices() {\n        try {\n            const url = `/api/users/${props.user.username}/services`;\n\n            const searchParams = new URLSearchParams();\n            searchParams.append('page', Math.ceil(state.services.length / state.limit));\n            searchParams.append('limit', state.limit);\n\n            const response = await fetch(`${url}?${searchParams.toString()}`, {\n                headers: {\n                    'Authorization': `Bearer ${props.session.authToken}`\n                }\n            });\n\n            let newServices = await response.json();\n            if (!response.ok) {\n                throw new Error(newServices.message);\n            }\n\n            setState(prevState => {\n                const updatedServices = [...prevState.services, ...newServices];\n\n                return {\n                    ...prevState,\n                    services: updatedServices\n                }\n            })\n        } catch (err) {\n            console.error(`Failed to append more services. ${err}`);\n        }\n    }\n\n    async function appendService(newService) {\n        setState(prevState => {\n            const newServices = [newService, ...prevState.services];\n\n            return {\n                ...prevState,\n                services: newServices\n            }\n        });\n    }\n\n    async function deleteService(id) {\n        try {\n            const response = await fetch(`/api/users/${props.user.username}/services/${id}`, {\n                method: 'DELETE',\n                credentials: 'same-origin',\n                headers: {\n                  'Content-Type': 'application/json',\n                  'Authorization': `Bearer ${props.session.authToken}`\n                }\n            });\n\n            let data = await response.json();\n            if (!response.ok) {\n                throw new Error(data.message);\n            }\n\n            setState(prevState => {\n                const newServices = state.services.filter(service => {\n                    return service.id !== id;\n                });\n\n                return {\n                    ...prevState,\n                    services: newServices\n                }\n            });\n        } catch (err) {\n            console.error(`Failed to delete service- ${id}. ${err}`);\n        }\n    }\n\n    return (\n        <>\n            <Widget>\n                <TitleBar title=\"Services\">\n                    {(!props.disableEdit) &&\n                        <TitleToggler \n                            target=\"userServiceAdd01\"\n                            expandIcon=\"add\"\n                            collapseIcon=\"clear\"\n                        />\n                    }\n                </TitleBar>\n                <WidgetCollapsible id=\"userServiceAdd01\">\n                    <AddSection\n                        session={props.session}\n                        user={props.user}\n                        appendService={appendService}\n                    />\n                </WidgetCollapsible>\n                <ListSection\n                    session={props.session}\n                    services={state.services}\n                    deleteService={deleteService}\n                />\n            </Widget>\n            <AutoLoader callback={appendServices} />\n        </>\n    );\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}