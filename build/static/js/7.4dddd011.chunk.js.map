{"version":3,"sources":["containers/settings/widgets/accountInformation.js","containers/settings/widgets/deleteUser.js","containers/settings/widgets/password.js","containers/settings/widgets/physicianInformation.js","containers/settings/widgets/profilePhoto.js","containers/settings/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","components/widgets.js","components/form.js","components/dropdown.js","containers/home/titleBar.js","components/lists.js","components/cards.js"],"names":["EditSection","props","useState","errorMessage","setErrorMessage","firstName","user","lastName","dob","NumericDate","date","gender","emailId","phoneNumber","fields","setFields","handleChange","e","a","target","name","value","preventDefault","Date","newUserInfo","fetch","username","method","credentials","headers","session","authToken","body","JSON","stringify","response","json","data","ok","Error","message","updateUser","console","error","className","handleSubmit","role","for","type","id","onChange","placeholder","label","required","ViewSection","dobDate","AccountInformationWidget","useSelector","s","dispatch","useDispatch","editMode","setEditMode","isLoading","setIsLoading","setUser","toggleEditMode","payload","useEffect","fetchUserInfo","title","icon","handleClick","DeleteUserWidget","validateMode","setValidateMode","toggleValidateMode","deleteResponse","signOutResponse","class","currentPassword","newPassword","confirmPassword","updatePassword","minlength","maxlength","PasswordWidget","qualification","specialization","PhysicianInformationWidget","files","formData","FormData","append","updateProfilePhotoId","profilePhotoId","enctype","replace","alt","src","ProfilePhotoWidget","newProfilePhotoId","SettingsApp","isPhysician","_objectWithoutProperties","source","excluded","key","i","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","WidgetRow","useExtendClass","children","WidgetColumns","Widget","TitleBar","TitleButtons","TitleButton","data-toggle","onClick","TitleToggler","collapseMode","setCollapseMode","data-target","aria-expanded","aria-controls","collapseIcon","expandIcon","WidgetBody","otherProps","WidgetCollapsible","WidgetList","WidgetListItem","WidgetDropdown","labelledBy","WidgetDropdownItem","Form","autoComplete","onSubmit","FormRow","FormGroup","FormButton","disabled","FormSubmit","FormLabel","htmlFor","FormLegend","Dropdown","DropdownButton","aria-haspopup","DropdownButtonToggle","DropdownMenu","aria-labelledby","DropdownMenuDivider","DropdownMenuButton","Boolean","Toggler","DropdownMenuItem","TitleBarLink","tooltip","TitleBarLinks","TitleBarSearch","query","handleSearch","err","aria-label","aria-describedby","toggleType","asList","NotificationDropDown","UserDropdown","menuLinks","path","map","menuLink","index","exact","List","ListItem","ListLink","to","url","ListButton","Card","CardHeader","CardBody","CardFooter","BodyCard"],"mappings":"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","file":"static/js/7.4dddd011.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { PrettyDate, DateInput, NumericDate } from '../../../components/dates';\nimport { Form, FormGroup, FormLabel, FormRow, FormSubmit } from '../../../components/form';\nimport { Col, DescriptionDetails, DescriptionList, DescriptionTerm, \n    FluidContainer, Row } from '../../../components/layout';\nimport { Loader } from '../../../components/loaders';\nimport { Email, FullName, Gender, GenderInput, PhoneNumber } from '../../../components/users';\nimport { TitleBar, TitleButton, Widget, WidgetBody } from '../../../components/widgets';\n\n\nfunction EditSection(props) {\n    const [errorMessage, setErrorMessage] = useState(\"\");\n\n    const [fields, setFields] = useState({\n        firstName: (props.user.firstName) ? props.user.firstName : \"\",\n        lastName: (props.user.lastName) ? props.user.lastName : \"\",\n        dob: NumericDate({ date: props.user.dob }),\n        gender: (props.user.gender) ? props.user.gender : \"\",\n        emailId: (props.user.emailId) ? props.user.emailId : \"\",\n        phoneNumber: (props.user.phoneNumber) ? props.user.phoneNumber : \"\"\n    });\n\n    async function handleChange(e) {\n        setFields({\n            ...fields,\n            [e.target.name]: e.target.value\n        });\n    }\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n        try {\n            const dob = new Date(fields.dob);\n\n            const newUserInfo = {\n                firstName: fields.firstName,\n                lastName: fields.lastName,\n                dob: dob,\n                gender: fields.gender,\n                emailId: fields.emailId,\n                phoneNumber: fields.phoneNumber\n            };\n\n            const response = await fetch(`/api/users/${props.user.username}`, {\n                method: 'PUT',\n                credentials: 'same-origin',\n                headers: {\n                  'Content-Type': 'application/json',\n                  'Authorization': `Bearer ${props.session.authToken}`\n                },\n                body: JSON.stringify(newUserInfo)\n            });\n\n            let data = await response.json();\n            if (!response.ok) {\n                throw new Error(data.message);\n            }\n\n            if (props.updateUser) {\n                await props.updateUser(newUserInfo);\n            }\n        } catch (err) {\n            console.error(`Failed to update account information. ${err}`);\n            setErrorMessage(err.message);\n        }\n    }\n\n    const today = new Date();\n    return (\n        <Form className=\"container-fluid\" handleSubmit={handleSubmit}>\n            {(fields.errorMessage) &&\n                <FormRow className=\"justify-content-center\">\n                    <div className=\"alert alert-danger\" role=\"alert\">{errorMessage}</div>\n                </FormRow>\n            }\n            <FormRow>\n                <FormLabel for=\"acctInput01\" className=\"col-12 col-sm-4\">Full Name</FormLabel>\n                <FormGroup className=\"col-12 col-sm-8\">\n                    <Row>\n                        <Col className=\"col-sm-auto\">\n                            <input type=\"text\" id=\"acctInput01\" name=\"firstName\" \n                                className=\"form-control\"\n                                value={fields.firstName} onChange={handleChange}\n                                placeholder=\"First name\" \n                            />\n                        </Col>\n                        <Col className=\"col-sm-auto\">\n                            <input type=\"text\" id=\"acctInput02\" name=\"lastName\" \n                                className=\"form-control\"\n                                value={fields.lastName} onChange={handleChange}\n                                placeholder=\"Last name\" \n                            />\n                        </Col>\n                    </Row>\n                </FormGroup>\n            </FormRow>\n            <FormRow>\n                <FormLabel for=\"acctInput03\" className=\"col-12 col-sm-4\">Date of Birth</FormLabel>\n                <FormGroup className=\"col-12 col-sm-auto\">\n                    <DateInput\n                        id=\"acctInput03\"\n                        name=\"dob\"\n                        label=\"Date of Birth\"\n                        value={fields.dob}\n                        handleChange={handleChange}\n                        required={true}\n                    />\n                </FormGroup>\n            </FormRow>\n            <FormRow>\n                <FormLabel for=\"acctInput04\" className=\"col-12 col-sm-4\">Gender</FormLabel>\n                <FormGroup className=\"col-12 col-sm-auto\">\n                    <GenderInput\n                        id=\"acctInput04\"\n                        className=\"form-control\"\n                        name=\"gender\"\n                        label=\"Gender\"\n                        value={fields.gender}\n                        handleChange={handleChange}\n                        required={true}\n                    />\n                </FormGroup>\n            </FormRow>\n            <FormRow>\n                <FormLabel for=\"acctInput05\" className=\"col-12 col-sm-4\">Email ID</FormLabel>\n                <FormGroup className=\"col-12 col-sm-auto\">\n                    <input type=\"text\" id=\"acctInput05\" name=\"emailId\" className=\"form-control\"\n                        placeholder=\"Email ID\" value={fields.emailId} onChange={handleChange}\n                    />\n                </FormGroup>\n            </FormRow>\n            <FormRow>\n                <FormLabel for=\"acctInput06\" className=\"col-12 col-sm-4\">Phone Number</FormLabel>\n                <FormGroup className=\"col-12 col-sm-auto\">\n                    <input type=\"text\" id=\"acctInput06\" name=\"phoneNumber\" className=\"form-control\"\n                        placeholder=\"Phone Number\" value={fields.phoneNumber} onChange={handleChange}\n                    />\n                </FormGroup>\n            </FormRow>\n            <FormRow className=\"justify-content-center\">\n                <FormSubmit type=\"submit\" className=\"col-auto col-sm-4\">Save</FormSubmit>\n            </FormRow>\n        </Form>\n    );\n}\n\n\nfunction ViewSection(props) {\n    const dobDate = new Date(props.user.dob);\n    return (\n        <FluidContainer>\n            <DescriptionList className=\"justify-content-center\">\n                <DescriptionTerm className=\"col-12 col-sm-4\">Full Name</DescriptionTerm>\n                <DescriptionDetails className=\"col-12 col-sm-8\">\n                    <FullName user={props.user} />\n                </DescriptionDetails>\n\n                <DescriptionTerm className=\"col-12 col-sm-4\">Date of Birth</DescriptionTerm>\n                <DescriptionDetails className=\"col-12 col-sm-8\">\n                    <PrettyDate date={dobDate} />\n                </DescriptionDetails>\n\n                <DescriptionTerm className=\"col-12 col-sm-4\">Gender</DescriptionTerm>\n                <DescriptionDetails className=\"col-12 col-sm-8\">\n                    <Gender user={props.user} />\n                </DescriptionDetails>\n\n                <DescriptionTerm className=\"col-12 col-sm-4\">Email ID</DescriptionTerm>\n                <DescriptionDetails className=\"col-12 col-sm-8\">\n                    <Email user={props.user} />\n                </DescriptionDetails>\n\n                <DescriptionTerm className=\"col-12 col-sm-4\">Phone Number</DescriptionTerm>\n                <DescriptionDetails className=\"col-12 col-sm-8\">\n                    <PhoneNumber user={props.user} />\n                </DescriptionDetails>\n            </DescriptionList>\n        </FluidContainer>\n    );\n}\n\n\nexport default function AccountInformationWidget(props) {\n    const session = useSelector(s => s.session);\n    const dispatch = useDispatch();\n\n    const [editMode, setEditMode] = useState(false);\n    const [isLoading, setIsLoading] = useState(true);\n    const [user, setUser] = useState({});\n\n    useEffect(() => {\n        async function fetchUserInfo() {\n            try {\n                setIsLoading(true);\n                const response = await fetch(`/api/users/${session.username}`, {\n                    headers: {\n                        'Authorization': `Bearer ${session.authToken}`\n                    }\n                });\n\n                let data = await response.json();\n                if (!response.ok) {\n                    throw new Error(data.message);\n                }\n\n                setUser(data);\n            } catch (err) {\n                console.error(`Failed to get user account information. ${err}`);\n            } finally {\n                setIsLoading(false);\n            }\n        }\n\n        fetchUserInfo();\n    }, [session]);\n\n    async function toggleEditMode(e) {\n        e.preventDefault();\n        setEditMode(!editMode);\n    }\n\n    async function updateUser(newUserInfo) {\n        setUser({\n            ...user,\n            ...newUserInfo\n        });\n\n        dispatch({\n            type: \"session/set\",\n            payload: {\n                firstName: user.firstName,\n                lastName: user.lastName\n            }\n        });\n\n        setEditMode(!editMode);\n    }\n\n    return (\n        <Widget>\n            <TitleBar title=\"Account Information\">\n                {\n                    (editMode) ?\n                    <TitleButton name=\"Cancel\" icon=\"clear\" handleClick={toggleEditMode} /> :\n                    <TitleButton name=\"Edit\" icon=\"edit\" handleClick={toggleEditMode} />\n                }\n            </TitleBar>\n            <WidgetBody>\n                { (isLoading) ?\n                    <>\n                        <Loader isLoading={true} />\n                    </> :\n                    <>\n                        {\n                            (editMode) ?\n                            <>\n                                <EditSection\n                                    session={session}\n                                    user={user}\n                                    updateUser={updateUser}\n                                />\n                            </> :\n                            <>\n                                <ViewSection \n                                    user={user}\n                                />\n                            </>\n                        }\n                    </>\n                }\n            </WidgetBody>\n        </Widget>\n    );\n}","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavItem } from '../../../components/navs';\nimport { TitleBar, TitleButton, TitleButtons, Widget, WidgetBody } from '../../../components/widgets';\n\n\nexport default function DeleteUserWidget(props) {\n    const session = useSelector(s => s.session);\n    const dispatch = useDispatch();\n\n    const [validateMode, setValidateMode] = useState(false);\n\n    async function toggleValidateMode(e) {\n        e.preventDefault();\n        setValidateMode(!validateMode);\n    }\n\n    async function clickedAccept(e) {\n        e.preventDefault();\n        try {\n            const deleteResponse = await fetch(`/api/users/${session.username}`, {\n                method: 'DELETE',\n                credentials: 'same-origin',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${session.authToken}`\n                }\n            });\n\n            let data = await deleteResponse.json();\n            if (!deleteResponse.ok) {\n                throw new Error(data.message);\n            }\n\n            const signOutResponse = await fetch(`/api/auth/signout`, {\n                method: 'GET',\n                credentials: 'same-origin',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${session.authToken}`\n                }\n            });\n\n            data = await signOutResponse.json();\n            if (!signOutResponse.ok) {\n                throw new Error(data.message);\n            }\n\n            dispatch({\n                type: \"session/reset\"\n            });\n        } catch (err) {\n            console.error(`Failed to delete user. ${err}`);\n        }\n    }\n\n    return (\n        <Widget>\n            <TitleBar title=\"Delete Account\">\n                {\n                    (validateMode) ?\n                    <>\n                        <TitleButtons>\n                            <NavItem>\n                                <TitleButton name=\"Accept\" icon=\"check\" handleClick={clickedAccept} />\n                            </NavItem>\n                            <NavItem>\n                                <TitleButton name=\"Cancel\" icon=\"clear\" handleClick={toggleValidateMode} />\n                            </NavItem>\n                        </TitleButtons>\n                    </> :\n                    <>\n                        <TitleButton name=\"Delete\" icon=\"delete\" handleClick={toggleValidateMode} />\n                    </>\n                }\n            </TitleBar>\n            {validateMode &&\n                <WidgetBody>\n                    <div class=\"alert alert-danger\" role=\"alert\">\n                        Once your account is deleted, all your information is removed from our website and it cannot be retrieved back. \n                        Please reconsider once before proceeding. We're sad to see you leave.\n                    </div>\n                </WidgetBody>\n            }\n        </Widget>\n    );\n}","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Form, FormGroup, FormLabel, FormRow, FormSubmit } from '../../../components/form';\nimport { TitleBar, TitleButton, Widget, WidgetBody } from '../../../components/widgets';\n\n\nfunction EditSection(props) {\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    const [fields, setFields] = useState({\n        currentPassword: \"\",\n        newPassword: \"\",\n        confirmPassword: \"\"\n    });\n\n    async function handleChange(e) {\n        setFields({\n            ...fields,\n            [e.target.name]: e.target.value\n        });\n    }\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n        try {\n            if (fields.confirmPassword !== fields.newPassword) {\n                throw new Error(\"New Password and Comfirm Password do not match.\");\n            }\n\n            const response = await fetch(`/api/auth/password`, {\n                method: 'PUT',\n                credentials: 'same-origin',\n                headers: {\n                  'Content-Type': 'application/json',\n                  'Authorization': `Bearer ${props.session.authToken}`\n                },\n                body: JSON.stringify({\n                  currentPassword: fields.currentPassword,\n                  newPassword: fields.newPassword\n                })\n            });\n\n            let data = await response.json();\n            if (!response.ok) {\n                throw new Error(data.message);\n            }\n\n            if (props.updatePassword) {\n                props.updatePassword();\n            }\n        } catch (err) {\n            console.error(`Failed to update user password. ${err}`);\n            setErrorMessage(err.message);\n        }\n    }\n    \n    return (\n        <Form className=\"container-fluid\" handleSubmit={handleSubmit}>\n            {(errorMessage) &&\n                <FormRow className=\"justify-content-center\">\n                    <div className=\"alert alert-danger\" role=\"alert\">{errorMessage}</div>\n                </FormRow>\n            }\n            <FormRow>\n                <FormLabel for=\"passwordInput01\" className=\"col-12 col-sm-4\">Current Password</FormLabel>\n                <FormGroup className=\"col-12 col-sm-auto\">\n                    <input type=\"password\" id=\"passwordInput01\" name=\"currentPassword\"\n                        className=\"form-control\" placeholder=\"\" value={fields.currentPassword}\n                            onChange={handleChange} minlength=\"8\" maxlength=\"20\" required\n                  />\n                </FormGroup>\n            </FormRow>\n            <FormRow>\n                <FormLabel for=\"passwordInput02\" className=\"col-12 col-sm-4\">New Password</FormLabel>\n                <FormGroup className=\"col-12 col-sm-auto\">\n                    <input type=\"password\" id=\"passwordInput02\" name=\"newPassword\"\n                        className=\"form-control\" placeholder=\"\" value={fields.newPassword}\n                            onChange={handleChange} minlength=\"8\" maxlength=\"20\" required\n                  />\n                </FormGroup>\n            </FormRow>\n            <FormRow>\n                <FormLabel for=\"passwordInput03\" className=\"col-12 col-sm-4\">Confirm Password</FormLabel>\n                <FormGroup className=\"col-12 col-sm-auto\">\n                    <input type=\"password\" id=\"passwordInput03\" name=\"confirmPassword\"\n                        className=\"form-control\" placeholder=\"\" value={fields.confirmPassword}\n                            onChange={handleChange} minlength=\"8\" maxlength=\"20\" required\n                  />\n                </FormGroup>\n            </FormRow>\n            <FormRow className=\"justify-content-center\">\n                <FormSubmit className=\"col-auto col-sm-4\">Save</FormSubmit>\n            </FormRow>\n        </Form>\n    );\n}\n\n\nexport default function PasswordWidget(props) {\n    const session = useSelector(s => s.session);\n\n    const [editMode, setEditMode] = useState(false);\n\n    async function toggleEditMode(e) {\n        e.preventDefault();\n        setEditMode(!editMode);\n    }\n\n    async function updatePassword() {\n        setEditMode(!editMode);\n    }\n\n    return (\n        <Widget>\n            <TitleBar title=\"Change Password\">\n                {\n                    (editMode) ?\n                    <TitleButton name=\"Cancel\" icon=\"clear\" handleClick={toggleEditMode} /> :\n                    <TitleButton name=\"Edit\" icon=\"edit\" handleClick={toggleEditMode} />\n                }\n            </TitleBar>\n            {editMode &&\n                <WidgetBody>\n                    <EditSection \n                        session={session}\n                        updatePassword={updatePassword}\n                    />\n                </WidgetBody>\n            }\n        </Widget>\n    );\n}","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Form, FormGroup, FormLabel, FormRow, FormSubmit } from '../../../components/form';\nimport { DescriptionDetails, DescriptionList, DescriptionTerm, FluidContainer } from '../../../components/layout';\nimport { Loader } from '../../../components/loaders';\nimport { QualificationInput, SpecializationInput } from '../../../components/users';\nimport { TitleBar, TitleButton, Widget, WidgetBody } from '../../../components/widgets';\n\n\nfunction EditSection(props) {\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    const [fields, setFields] = useState({\n        qualification: (props.user.qualification) ? props.user.qualification: \"\",\n        specialization: (props.user.specialization) ? props.user.specialization: \"\"\n    });\n\n    async function handleChange(e) {\n        setFields({\n            ...fields,\n            [e.target.name]: e.target.value\n        });\n    }\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n        try {\n            const newUserInfo = {\n                qualification: fields.qualification,\n                specialization: fields.specialization\n            };\n\n            const response = await fetch(`/api/users/${props.session.username}`, {\n                method: 'PUT',\n                credentials: 'same-origin',\n                headers: {\n                  'Content-Type': 'application/json',\n                  'Authorization': `Bearer ${props.session.authToken}`\n                },\n                body: JSON.stringify(newUserInfo)\n            });\n\n            let data = await response.json();\n            if (!response.ok) {\n                throw new Error(data.message);\n            }\n\n            if (props.updateUser) {\n                props.updateUser(newUserInfo);\n            }\n        } catch (err) {\n            console.error(`Failed to update physician information. ${err}`);\n            setErrorMessage(err.message);\n        }\n    }\n\n    return (\n        <Form className=\"container-fluid\" handleSubmit={handleSubmit}>\n            {(errorMessage) &&\n                <FormRow className=\"justify-content-center\">\n                    <div className=\"alert alert-danger\" role=\"alert\">{errorMessage}</div>\n                </FormRow>\n            }\n            <FormRow>\n                <FormLabel for=\"physicianInput01\" className=\"col-12 col-sm-4\">Qualification</FormLabel>\n                <FormGroup className=\"col-12 col-sm-auto\">\n                    <QualificationInput\n                        id=\"physicianInput01\"\n                        className=\"form-control\"\n                        name=\"qualification\"\n                        value={fields.qualification}\n                        handleChange={handleChange}\n                        required={true}\n                    />\n                </FormGroup>\n            </FormRow>\n            <FormRow>\n                <FormLabel for=\"physicianInput02\" className=\"col-12 col-sm-4\">Specialization</FormLabel>\n                <FormGroup className=\"col-12 col-sm-auto\">\n                    <SpecializationInput\n                        id=\"physicianInput02\"\n                        className=\"form-control\"\n                        name=\"specialization\"\n                        value={fields.specialization}\n                        handleChange={handleChange}\n                        required={true}\n                    />\n                </FormGroup>\n            </FormRow>\n            <FormRow className=\"justify-content-center\">\n                <FormSubmit type=\"submit\" className=\"col-auto col-sm-4\">Save</FormSubmit>\n            </FormRow>\n        </Form>\n    );\n}\n\n\n\nfunction ViewSection(props) {\n    return (\n        <FluidContainer>\n            <DescriptionList className=\"justify-content-center\">\n                <DescriptionTerm className=\"col-12 col-sm-4\">Qualification</DescriptionTerm>\n                <DescriptionDetails className=\"col-12 col-sm-8\">\n                    {props.user.qualification}\n                </DescriptionDetails>\n\n                <DescriptionTerm className=\"col-12 col-sm-4\">Specialization</DescriptionTerm>\n                <DescriptionDetails className=\"col-12 col-sm-8\">\n                    {props.user.specialization}\n                </DescriptionDetails>\n            </DescriptionList>\n        </FluidContainer>\n    );\n}\n\n\n\nexport default function PhysicianInformationWidget(props) {\n    const session = useSelector(s => s.session);\n\n    const [editMode, setEditMode] = useState(false);\n    const [isLoading, setIsLoading] = useState(true);\n    const [user, setUser] = useState({});\n\n    useEffect(() => {\n        async function fetchUserInfo() {\n            try {\n                setIsLoading(true);\n                const response = await fetch(`/api/users/${session.username}`, {\n                    headers: {\n                        'Authorization': `Bearer ${session.authToken}`\n                    }\n                });\n\n                let data = await response.json();\n                if (!response.ok) {\n                    throw new Error(data.message);\n                }\n\n                setUser(data);\n            } catch (err) {\n                console.error(`Failed to get user account information. ${err}`);\n            } finally {\n                setIsLoading(false);\n            }\n        }\n\n        fetchUserInfo();\n    }, [session]);\n\n    async function toggleEditMode(e) {\n        e.preventDefault();\n        setEditMode(!editMode);\n    }\n\n    async function updateUser(newUserInfo) {\n        setUser({\n            ...user,\n            ...newUserInfo\n        });\n\n        setEditMode(!editMode);\n    }\n\n    return (\n        <Widget>\n            <TitleBar title=\"Physician Information\">\n                {\n                    (editMode) ?\n                    <TitleButton name=\"Cancel\" icon=\"clear\" handleClick={toggleEditMode} /> :\n                    <TitleButton name=\"Edit\" icon=\"edit\" handleClick={toggleEditMode} />\n                }\n            </TitleBar>\n            <WidgetBody>\n                {\n                    (isLoading) ?\n                    <>\n                        <Loader isLoading={true} />\n                    </> :\n                    <>\n                        {                    \n                            (editMode) ?\n                            <>\n                                <EditSection \n                                    session={session}\n                                    user={user}\n                                    updateUser={updateUser}\n                                />\n                            </> :\n                            <>\n                                <ViewSection \n                                    user={user}\n                                />\n                            </>\n                        }\n                    </>\n                }\n            </WidgetBody>\n        </Widget>\n    );\n}","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, FormButton, FormGroup, FormLabel, FormRow, FormSubmit } from '../../../components/form';\nimport { Col, FluidContainer, Row } from '../../../components/layout';\nimport { Photo } from '../../../components/users';\nimport { TitleBar, TitleButton, Widget, WidgetBody } from '../../../components/widgets';\n\n\nfunction EditSection(props) {\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    const [fields, setFields] = useState({\n        name: \"\",\n        data: null\n    });\n\n    async function handleChange(e) {\n        setFields({\n            ...fields,\n            name: e.target.value,\n            data: e.target.files[0]\n        });\n    }\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n        try {\n            const username = props.session.username;\n\n            let formData = new FormData();\n            formData.append('data', fields.data);\n            formData.append('isProfilePhoto', true);\n\n            const response = await fetch(`/api/users/${username}/photos`, {\n                method: 'POST',\n                credentials: 'same-origin',\n                headers: {\n                    'Authorization': `Bearer ${props.session.authToken}`\n                },\n                body: formData\n            });\n\n            let data = await response.json();\n            if (!response.ok) {\n                throw new Error(data.message);\n            }\n\n            if (props.updateProfilePhotoId) {\n                props.updateProfilePhotoId(data.id);\n            }\n        } catch (err) {\n            console.error(`Failed to set new profile photo. ${err}`);\n            setErrorMessage(err.message);\n        }\n    }\n\n    async function clickedDelete(e) {\n        e.preventDefault();\n        try {\n            const username = props.session.username;\n            const profilePhotoId = props.session.profilePhotoId;\n\n            const response = await fetch(`/api/users/${username}/photos/${profilePhotoId}`, {\n                method: 'DELETE',\n                credentials: 'same-origin',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${props.session.authToken}`\n                }\n            });\n\n            let data = await response.json();\n            if (!response.ok) {\n                throw new Error(data.message);\n            }\n\n            if (props.updateProfilePhotoId) {\n                props.updateProfilePhotoId(null);\n            }\n        } catch (err) {\n            console.error(`Failed to delete profile photo. ${err}`);\n            setErrorMessage(err.message);\n        }\n    }\n\n    return (\n        <Form className=\"container-fluid\" handleSubmit={handleSubmit} \n            enctype=\"multipart/form-data\">\n            {(errorMessage) &&\n                <FormRow className=\"justify-content-center\">\n                    <div className=\"alert alert-danger\" role=\"alert\">{errorMessage}</div>\n                </FormRow>\n            }\n            <FormRow>\n                <FormLabel for=\"profilePhoto01\" className=\"col-12 col-sm-4\">Select new photo</FormLabel>\n                <FormGroup className=\"col-12 col-sm-auto\">\n                    <FormRow>\n                        <input id=\"profilePhoto01\" type=\"file\" name=\"name\" \n                            className=\"custom-file-input\" value={fields.name} \n                                onChange={handleChange}/>\n                        <label className=\"custom-file-label\" for=\"generalInput07\">\n                            {\n                                (fields.name) ?\n                                fields.name.replace(/^.*[\\\\\\/]/, '') :\n                                \"Choose a file...\"\n                            }\n                    </label>\n                    </FormRow>\n                    {fields.data &&\n                        <FormRow>\n                            <FluidContainer className=\"m-2\">\n                                <Row for=\"profilePhoto02\">\n                                    <Col>Preview</Col>\n                                </Row>\n                                <Row>\n                                    <Col>\n                                        <Photo\n                                            id=\"profilePhoto02\"\n                                            className=\"md-pfl-bg\"\n                                            alt=\"Preview Photo\"\n                                            src={fields.data}\n                                        />\n                                    </Col>\n                                </Row>\n                            </FluidContainer>\n                        </FormRow>\n                    }\n                    <FormRow className=\"mt-3\">\n                        <FormSubmit>Set as Profile photo</FormSubmit>\n                    </FormRow>\n                </FormGroup>\n            </FormRow>\n            <FormRow>\n                <FormLabel for=\"profilePhoto03\" className=\"col-12 col-sm-4\">Remove photo</FormLabel>\n                <FormGroup className=\"col-12 col-sm-8\">\n                    <FormButton className=\"btn btn-danger\" handleClick={clickedDelete}>Remove</FormButton>\n                </FormGroup>\n            </FormRow>\n        </Form>\n    );\n}\n\n\n\nexport default function ProfilePhotoWidget(props) {\n    const session = useSelector(s => s.session);\n    const dispatch = useDispatch();\n\n    const [editMode, setEditMode] = useState(false);\n\n    async function toggleEditMode(e) {\n        e.preventDefault();\n        setEditMode(!editMode);\n    }\n\n    async function updateProfilePhotoId(newProfilePhotoId) {\n        dispatch({\n            type: \"session/set\",\n            payload: {\n                profilePhotoId: newProfilePhotoId\n            }\n        });\n\n        setEditMode(!editMode);\n    }\n\n    return (\n        <Widget>\n            <TitleBar title=\"Change Profile Photo\">\n                {\n                    (editMode) ?\n                    <TitleButton name=\"Cancel\" icon=\"clear\" handleClick={toggleEditMode} /> :\n                    <TitleButton name=\"Edit\" icon=\"edit\" handleClick={toggleEditMode} />\n                }\n            </TitleBar>\n            {(editMode) &&\n                <WidgetBody>\n                    <EditSection \n                        session={session}\n                        updateProfilePhotoId={updateProfilePhotoId}\n                    />\n                </WidgetBody>\n            }\n        </Widget>\n    );\n}","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Col, FluidContainer, Row } from '../../components/layout';\nimport { WidgetRow } from '../../components/widgets';\n\nimport TitleBar from '../home/titleBar';\nimport AccountInformationWidget from './widgets/accountInformation';\nimport DeleteUserWidget from './widgets/deleteUser';\nimport PasswordWidget from './widgets/password';\nimport PhysicianInformationWidget from './widgets/physicianInformation';\nimport ProfilePhotoWidget from './widgets/profilePhoto';\n\n\nexport default function SettingsApp(props) {\n    const session = useSelector(s => s.session);\n\n    return (\n        <>\n            <TitleBar title=\"Settings\" />\n            <Row className=\"flex-grow-1\">\n                <Col className=\"pt-3\">\n                    <FluidContainer>\n                        <WidgetRow>\n                            <Col>\n                                <AccountInformationWidget />\n                            </Col>\n                        </WidgetRow>\n                        <WidgetRow>\n                            <Col>\n                                <ProfilePhotoWidget />\n                            </Col>\n                        </WidgetRow>\n                        <WidgetRow>\n                            <Col>\n                                <PasswordWidget />\n                            </Col>\n                        </WidgetRow>\n                        {session.isPhysician &&\n                            <WidgetRow>\n                                <Col>\n                                    <PhysicianInformationWidget />\n                                </Col>\n                            </WidgetRow>\n                        }\n                        <WidgetRow>\n                            <Col>\n                                <DeleteUserWidget />\n                            </Col>\n                        </WidgetRow>\n                    </FluidContainer>\n                </Col>\n            </Row>\n        </>\n    );\n}","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React, { useState } from 'react';\nimport { useExtendClass } from \"./hooks\";\nimport { Row } from './layout';\nimport { BodyCard, Card, CardBody } from './cards';\nimport { List, ListItem, ListLink } from './lists';\nimport { LgIcon } from './icons';\nimport { Dropdown, DropdownButton, DropdownMenu, DropdownMenuButton } from './dropdown';\n\n\nexport function WidgetRow(props) {\n    return (\n        <Row className={useExtendClass(\"mb-3\", props.className)}>\n            {props.children}\n        </Row>\n    );\n}\n\n\nexport function WidgetDeck(props) {\n    return (\n        <div class={useExtendClass(\"card-deck mb-3\", props.className)}>\n            {props.children}\n        </div>\n    );\n}\n\n\nexport function WidgetColumns(props) {\n    return (\n        <div class={useExtendClass(\"card-columns mb-3\", props.className)}>\n            {props.children}\n        </div>\n    );\n}\n\n\nexport function Widget(props) {\n    return (\n        <Card className={useExtendClass(\"md-widget mb-3\", props.className)}>\n            {props.children}\n        </Card>\n    );\n}\n\n\nexport function InfoWidget(props) {\n    return (\n        <BodyCard className={useExtendClass(\"md-widget mb-3\", props.className)}>\n            {props.children}\n        </BodyCard>\n    );\n}\n\n\nexport function TitleBar(props) {\n    return (\n        <nav className=\"card-header navbar md-title px-3 py-1\">\n            <h6 className=\"navbar-brand text-muted my-1 py-0\">{props.title}</h6>\n            {props.children}\n        </nav>\n    );\n}\n\n\nexport function TitleButtons(props) {  \n    return (\n        <ul className={useExtendClass(\"nav\", props.className)}>\n            {props.children}\n        </ul>\n    );\n}\n\n\nexport function TitleButton(props) {\n    return (\n        <button type=\"button\" data-toggle=\"tooltip\" title={props.name} \n            className=\"btn btn-sm p-2 d-flex align-items-center\" onClick={props.handleClick}>\n            <LgIcon>{props.icon}</LgIcon>\n        </button>\n    );\n}\n\n\nexport function TitleToggler(props) {\n    const [collapseMode, setCollapseMode] = useState(false);\n\n    async function handleClick(e) {\n        setCollapseMode(!collapseMode);\n    }\n\n    return (\n        <button type=\"button\" data-toggle=\"collapse\" data-target={`#${props.target}`}\n            class=\"btn btn-sm p-2 d-flex align-items-center\"\n            onClick={handleClick} aria-expanded=\"false\" aria-controls={props.target}>\n            <LgIcon>{(collapseMode) ? props.collapseIcon: props.expandIcon }</LgIcon>\n        </button>\n    );\n}\n\n\nexport function WidgetBody(props) {\n    const { className, ...otherProps } = props;\n    return (\n        <CardBody className={useExtendClass(\"px-3 py-2\", className)} { ...otherProps } >\n            {props.children}\n        </CardBody>\n    );\n}\n\n\nexport function WidgetCollapsible(props) {\n    const { id, className, ...otherProps } = props;\n    return (\n        <WidgetBody id={id} { ...otherProps }\n            className={useExtendClass(\"collapse\", className)}>\n            {props.children}\n        </WidgetBody>\n    );\n}\n\n\nexport function WidgetList(props) {\n    return (\n        <List className=\"list-group-flush\">\n            {props.children}\n        </List>\n    );\n}\n\n\nexport function WidgetListItem(props) {\n    return (\n        <ListItem className=\"py-2 px-0\">\n            {props.children}\n        </ListItem>\n    );\n}\n\n\nexport function WidgetListLink(props) {\n    return (\n        <ListLink url={props.url} className=\"py-2 px-0\">\n            {props.children}\n        </ListLink>\n    );\n}\n\n\nexport function WidgetDropdown(props) {\n    return (\n        <Dropdown>\n            <DropdownButton id={props.id} className=\"p-2 d-flex align-items-center\">\n                <LgIcon>more_horiz</LgIcon>\n            </DropdownButton>\n            <DropdownMenu labelledBy={props.id} className=\"dropdown-menu-right\">\n                {props.children}\n            </DropdownMenu>\n        </Dropdown>\n    );\n}\n\n\nexport function WidgetDropdownItem(props) {\n    const { className, ...otherProps} = props;\n    return (\n        <DropdownMenuButton \n            className={useExtendClass(\"d-flex align-items-center\", className)}\n            {...otherProps}\n        >\n            {props.children}\n        </DropdownMenuButton>\n    );\n}","import React from 'react';\nimport { useExtendClass } from \"./hooks.js\";\n\n\n/* Form layout components */\nexport function Form(props) {\n    const enctype = (props.enctype) ? props.enctype: \"application/x-www-form-urlencoded\";\n\n    return (\n        <form method=\"post\" autoComplete={props.autoComplete} enctype={enctype}\n            className={useExtendClass(\"\", props.className)} onSubmit={props.handleSubmit}>\n            {props.children}\n        </form>\n    );\n}\n\n\nexport function FormRow(props) {  \n    return (\n        <div className={useExtendClass(\"form-row\", props.className)}>\n            {props.children}\n        </div>\n    );\n}\n\n\nexport function FormGroup(props) {  \n    return (\n        <div className={useExtendClass(\"form-group\", props.className)}>\n            {props.children}\n        </div>\n    );\n}\n\n\n/* Form element components. */\nexport function FormButton(props) {  \n    return (\n        <button type={(props.type) ? props.type: \"button\"} disabled={props.disabled}\n            className={useExtendClass(\"btn\", props.className)} onClick={props.handleClick}>\n            {props.children}\n        </button>\n    );\n}\n\n\nexport function FormSubmit(props) {\n    return (\n        <FormButton type=\"submit\" disabled={props.disabled}\n            className={useExtendClass(\"btn-primary\", props.className)}>\n            {props.children}\n        </FormButton>\n    );\n}\n\n\nexport function FormText(props) {  \n    return (\n        <input type=\"text\" id={props.id} value={props.value} readOnly \n            className={useExtendClass(\"form-control-plaintext\", props.className)}\n        />\n    );\n}\n\n\nexport function FormLabel(props) {  \n    return (\n        <label htmlFor={props.for} className={useExtendClass(\"col-form-label\", props.className)}>\n            {props.children}\n        </label>\n    );\n  }\n\n\nexport function FormLegend(props) {  \n    return (\n        <legend htmlFor={props.for} className={useExtendClass(\"col-form-label\", props.className)}>\n            {props.children}\n        </legend>\n    );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useExtendClass } from './hooks';\n\n\nexport function Dropdown(props) {\n    return (\n        <div className={useExtendClass(\"dropdown\", props.className)}>\n            {props.children}\n        </div>\n    );\n}\n\n\nexport function DropdownButton(props) {\n    return (\n        <button type=\"button\" id={props.id} data-toggle=\"dropdown\" \n            className={useExtendClass(\"btn\", props.className)}\n            aria-haspopup=\"true\" aria-expanded=\"false\">\n            {props.children}\n        </button>\n    );\n}\n\n\nexport function DropdownButtonToggle(props) {\n    return (\n        <button type=\"button\" id={props.id} data-toggle=\"dropdown\"\n            className={useExtendClass(\"btn dropdown-toggle\", props.className)}\n            aria-haspopup=\"true\" aria-expanded=\"false\">\n            {props.children}\n        </button>\n    );\n}\n\nexport function DropdownMenu(props) {\n    return (\n        <div aria-labelledby={props.labelledBy}\n            className={useExtendClass(\"dropdown-menu\", props.className)} >\n            {props.children}\n        </div>\n    );\n}\n\nexport function DropdownMenuDivider(props) {\n    return (\n        <div className={useExtendClass(\"dropdown-divider\", props.className)}></div>\n    );\n}\n\nexport function DropdownMenuLink(props) {\n    return (\n        <Link \n            to={props.url} exact={props.exact}\n            className={useExtendClass(\"dropdown-item\", props.className)}\n        >\n                {props.children}\n        </Link>\n    );\n}\n\nexport function DropdownMenuButton(props) {\n    return (\n        <button type=\"button\" onClick={props.handleClick}\n            className={useExtendClass(\"dropdown-item\", props.className)}\n                name={props.name} value={props.value} disabled={Boolean(props.disabled)}\n        >\n            {props.children}\n        </button>\n    );\n}","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { DropdownButton } from '../../components/buttons';\nimport { DropdownButtonToggle } from '../../components/dropdown';\nimport { Form } from '../../components/form';\nimport { useExtendClass } from '../../components/hooks';\nimport { LgIcon } from '../../components/icons';\nimport { Nav, NavBar, NavBrand, NavCollapsible, NavDropdown, NavDropdownLink, NavDropdownMenu, \n    NavDropdownMenuHeader, NavDropdownMenuItem, NavLink, NavLinks, NavToggler } from '../../components/navs';\nimport { ProfilePhoto } from '../../components/users';\n\n\nfunction Toggler(props) {\n    const { className, icon, ...otherProps } = props;\n    return (\n        <NavToggler\n            className={useExtendClass(\"md-btn p-2 mx-1\", className)}\n            {...otherProps}\n        >\n            <LgIcon className=\"d-flex align-items-center\">{icon}</LgIcon>\n        </NavToggler>\n    );\n}\n\n\nfunction DropdownMenuItem(props) {\n    const { title, icon, ...otherProps } = props;\n    return (\n        <NavDropdownMenuItem\n            className=\"md-mi d-flex align-items-center\"\n            {...otherProps}\n        >\n            <LgIcon>{icon}</LgIcon>\n            <p className=\"my-0 pl-2 text-truncate\">{title}</p>\n        </NavDropdownMenuItem>\n    );\n}\n\n\nexport function TitleBarLink(props) {\n    const { className, title, icon, ...otherProps } = props;\n    return (\n        <NavLink\n            { ...otherProps }\n            className={useExtendClass(\"md-btn mx-1 p-2 d-flex align-items-center\", className)}\n            tooltip={title}\n            role=\"button\"\n        >\n            <LgIcon>{icon}</LgIcon>\n            <p className=\"my-0 pl-2 text-truncate d-md-none\">{title}</p>\n        </NavLink>\n    );\n}\n\n\nexport function TitleBarLinks(props) {\n    return (\n        <NavLinks>\n            {props.children}\n        </NavLinks>\n    );\n}\n\n\nexport function TitleBarSearch(props) {\n    const [fields, setFields] = useState({\n        query: \"\"\n    });\n\n    async function handleChange(e) {\n        setFields({\n            ...fields,\n            [e.target.name]: e.target.value\n        });\n    }\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n        try {\n            if (props.handleSearch) {\n                props.handleSearch(fields.query);\n            }\n        } catch (err) {\n            console.error(`Failed to handle search query. ${err}`);\n        }\n    }\n\n    return (\n        <Form handleSubmit={handleSubmit}\n            className={useExtendClass(\"form-inline mx-1 my-2 my-lg-0\", props.className)} >\n            <div className=\"input-group w-100\">\n                <input id=\"titlebarSearch01\" type=\"text\" className=\"form-control\" name=\"query\"\n                    placeholder={props.placeholder} value={fields.query} onChange={handleChange}\n                        aria-label=\"Search Query\" aria-describedby=\"titlebarSearch02\" />\n                <div className=\"input-group-append\">\n                    <button id=\"titlebarSearch02\" type=\"button\" \n                        className=\"btn btn-sm btn-outline-secondary\" >\n                        <LgIcon>search</LgIcon>\n                    </button>\n                </div>\n            </div>\n        </Form>\n    );\n}\n\n\nexport default function TitleBar(props) {\n    const session = useSelector(s => s.session);\n\n    return (\n        <NavBar className=\"navbar-expand-md navbar-light row md-tbar sticky-top justify-content-start\">\n            <Toggler\n                target=\"sideBar01\"\n                icon=\"menu\"\n                toggleType=\"modal\"\n            />\n            <NavBrand className=\"mr-auto p-1 font-weight-bold\">{props.title}</NavBrand>\n            {props.children && \n                <>\n                    <Toggler\n                        target=\"titleBarNav01\"\n                        icon=\"more_vert\"\n                    />\n                    <NavCollapsible \n                        id=\"titleBarNav01\"\n                        className=\"justify-content-end order-last order-md-4\"\n                    >\n                        {props.children}\n                    </NavCollapsible>\n                </>\n            }\n            <Nav className=\"order-md-last\" asList={true}>\n                <NotificationDropDown />\n                <UserDropdown\n                    session={session}\n                    user={session}\n                />\n            </Nav>\n        </NavBar>\n    );\n}\n\n\n// Session based components.\nfunction UserDropdown(props) {\n    const dispatch = useDispatch();\n\n    async function signOut(e) {\n        e.preventDefault();\n        try {\n            const response = await fetch(`/api/auth/signout`, {\n                method: 'GET',\n                credentials: 'same-origin',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${props.session.authToken}`\n                }\n            });\n        \n            let data = await response.json();\n            if (!response.ok) {\n                throw new Error(data.message);\n            }\n\n            dispatch({\n                type: \"session/reset\"\n            });\n        } catch (err) {\n            console.error(`Failed to sign out. ${err}`);\n        }\n    }\n\n    const menuLinks = [\n        {\n            path: `/users/${props.user.username}`,\n            title: \"Profile\",\n            icon: \"person\"\n        },\n        {\n            path: \"/settings\",\n            title: \"Settings\",\n            icon: \"settings\"\n        },\n        {\n            title: \"Sign Out\",\n            icon: \"logout\",\n            handleClick: signOut\n        }\n    ];\n\n    return (\n        <NavDropdown>\n            <NavDropdownLink className=\"px-0 mx-1 d-flex align-items-center\">\n                <ProfilePhoto \n                    className=\"md-pfl-xs md-pfl-round\"\n                    session={props.session} \n                    user={props.user}\n                />\n            </NavDropdownLink>\n            <NavDropdownMenu className=\"dropdown-menu-right\">\n                {menuLinks.map((menuLink, index) => (\n                    <DropdownMenuItem\n                        key={index}\n                        path={menuLink.path}\n                        exact={menuLink.exact}\n                        title={menuLink.title}\n                        icon={menuLink.icon}\n                        handleClick={menuLink.handleClick}\n                    />\n                ))}\n            </NavDropdownMenu>\n        </NavDropdown>\n    );\n}\n\n\nfunction NotificationDropDown(props) {\n    return (\n        <NavDropdown className=\"mx-1 my-2\">\n            <DropdownButtonToggle className=\"md-btn p-2 d-flex align-items-center\">\n                <LgIcon>notifications</LgIcon>\n            </DropdownButtonToggle>\n            <NavDropdownMenu className=\"dropdown-menu-right\">\n                <NavDropdownMenuHeader>\n                    Coming Soon!\n                </NavDropdownMenuHeader>\n            </NavDropdownMenu>\n        </NavDropdown>\n    );\n}","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { useExtendClass } from \"./hooks.js\";\n\n\n/* Component Definitions */\nexport function List(props) {\n    return (\n        <div className={useExtendClass(\"list-group\", props.className)}>\n            {props.children}\n        </div>\n    );\n}\n\n\nexport function FlushedList(props) {\n    return (\n        <List className={useExtendClass(\"list-group-flush\", props.className)}>\n            {props.children}\n        </List>\n  );\n}\n\n\nexport function ListItem(props) {  \n    return (\n        <div className={useExtendClass(\"list-group-item\", props.className)}>\n            {props.children}\n        </div>\n    );\n}\n\n\nexport function ListLink(props) {  \n    return (\n        <Link to={props.url} \n            className={useExtendClass(\"list-group-item list-group-action\", props.className)}>\n            {props.children}\n        </Link>\n    );\n}\n\n\nexport function ListButton(props) {\n    const { className, handleClick, ...otherProps } = props;\n\n    return (\n        <button type=\"button\" onClick={handleClick} { ...otherProps }\n            className={useExtendClass(\"list-group-item list-group-action\", className)}>\n            {props.children}\n        </button>\n    );\n}","import React from 'react';\nimport { useExtendClass } from \"./hooks.js\";\n\n\nexport function Card(props) {\n    const { className, ...otherProps } = props;\n    return (\n        <div className={useExtendClass(\"card\", className)} { ...otherProps } >\n            {props.children}\n        </div>\n    );\n}\n\n\nexport function CardHeader(props) {\n    const { className, ...otherProps } = props;\n    return (\n        <div className={useExtendClass(\"card-header\", className)} { ...otherProps } >\n            {props.children}\n        </div>\n    );\n}\n\n\nexport function CardBody(props) {\n    const { className, ...otherProps } = props;\n    return (\n        <div className={useExtendClass(\"card-body\", className)} { ...otherProps } >\n            {props.children}\n        </div>\n    );\n}\n\n\nexport function CardFooter(props) {\n    const { className, ...otherProps } = props;\n    return (\n        <div className={useExtendClass(\"card-footer\", className)} { ...otherProps } >\n            {props.children}\n        </div>\n    );\n}\n\n\nexport function BodyCard(props) {\n    const { className, ...otherProps } = props;\n    return (\n        <div className={useExtendClass(\"card card-body\", className)} { ...otherProps } >\n            {props.children}\n        </div>\n    );\n}\n"],"sourceRoot":""}