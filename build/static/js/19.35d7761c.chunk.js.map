{"version":3,"sources":["containers/appointments/appointment/views/detailView/payments/addSection.js","containers/appointments/appointment/views/detailView/payments/infoSection.js","containers/appointments/appointment/views/detailView/payments/listSection.js","containers/appointments/appointment/views/detailView/payments/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["AddSection","props","useState","errorMessage","setErrorMessage","amount","fields","setFields","e","a","target","name","value","preventDefault","appointment","paymentBalance","Error","newPayment","fromUsername","Username","user","session","toUsername","physician","date","Date","fetch","id","method","credentials","headers","authToken","body","JSON","stringify","response","json","data","ok","message","appendPayment","console","error","className","handleSubmit","role","for","type","onChange","placeholder","min","step","InfoSection","serviceCharge","DefaultPaymentItem","PaymentItem","payment","ListSection","payments","length","map","index","handleDelete","deletePayment","PaymentSection","limit","state","setState","url","searchParams","URLSearchParams","append","Math","ceil","toString","newPayments","prevState","updatedPayments","updatePayment","newPaymentBalance","deletedPayment","filter","Object","assign","isCurrentUserPatient","useCompareUsers","patient","title","expandIcon","collapseIcon","callback","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"mappings":"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","file":"static/js/19.35d7761c.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Form, FormGroup, FormLabel, FormRow, \n    FormSubmit } from '../../../../../../components/form';\nimport { Username } from '../../../../../../components/users';\n\n\nexport default function AddSection(props) {\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    const [fields, setFields] = useState({\n        amount: \"\"\n    });\n\n    async function handleChange(e) {\n        setFields({\n            ...fields,\n            [e.target.name]: e.target.value\n        });\n    }\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n        try {\n            if (fields.amount > props.appointment.paymentBalance) {\n                throw new Error(\"Payment amount cannot be more than balance.\")\n            }\n\n            const newPayment = {\n                fromUsername: Username({ user: props.session }),\n                toUsername: Username({ user: props.appointment.physician}),\n                amount: fields.amount,\n                date: new Date()\n            };\n\n            const response = await fetch(`/api/appointments/${props.appointment.id}/payments`, {\n                method: 'POST',\n                credentials: 'same-origin',\n                headers: {\n                  'Content-Type': 'application/json',\n                  'Authorization': `Bearer ${props.session.authToken}`\n                },\n                body: JSON.stringify(newPayment)\n            });\n\n            let data = await response.json();\n            if (!response.ok) {\n                throw new Error(data.message);\n            }\n\n            newPayment.id = data.id;\n            if (props.appendPayment) {\n                props.appendPayment(newPayment);\n            }\n\n            setFields({\n                ...fields,\n                amount: \"\"\n            });\n        } catch (err) {\n            console.error(`Failed to add new payment. ${err}`);\n            setErrorMessage(err.message);\n        }\n    }\n\n    return (\n        <Form className=\"container-fluid\" handleSubmit={handleSubmit}>\n            {(errorMessage) &&\n                <FormRow className=\"justify-content-center\">\n                    <div className=\"alert alert-danger\" role=\"alert\">{errorMessage}</div>\n                </FormRow>\n            }\n            <FormRow className=\"my-2\">\n                <FormLabel for=\"paymentWidget1\" className=\"col-sm-4\">Amount</FormLabel>\n                <FormGroup className=\"col-sm-8\">\n                    <input id=\"paymentWidget1\" type=\"number\" name=\"amount\" \n                        className=\"form-control\" value={fields.amount} onChange={handleChange} \n                            placeholder=\"Add payment amount\" min=\"0\" step=\"0.01\">\n                    </input>\n                </FormGroup>\n            </FormRow>\n            <FormRow className=\"my-2 justify-content-center\">\n                <FormSubmit className=\"col-auto col-md-4\">Pay</FormSubmit>\n            </FormRow>\n        </Form>\n    );\n}","import React from 'react';\nimport { Col, DescriptionDetails, DescriptionList, \n    DescriptionTerm, \n    Row} from '../../../../../../components/layout';\nimport { Currency } from '../../../../../../components/users';\n\n\nexport default function InfoSection(props) {\n    return (\n        <DescriptionList>\n            <Col className=\"col-12 col-md-6\">\n                <Row>\n                    <DescriptionTerm className=\"col-12 col-md-auto\">Service Charge</DescriptionTerm>\n                    <DescriptionDetails className=\"col-12 col-md\">\n                        <Currency value={props.appointment.serviceCharge} />\n                    </DescriptionDetails>\n                </Row>\n            </Col>\n            <Col className=\"col-12 col-md-6\">\n                <Row>\n                    <DescriptionTerm className=\"col-12 col-md-auto\">Payment Balance</DescriptionTerm>\n                    <DescriptionDetails className=\"col-12 col-md\">\n                        <Currency value={props.appointment.paymentBalance} />\n                    </DescriptionDetails>\n                </Row>\n            </Col>\n        </DescriptionList>\n    );\n}","import React from 'react';\nimport { NumericDate } from '../../../../../../components/dates';\nimport { Col, FluidContainer, Row } from '../../../../../../components/layout';\nimport { Currency } from '../../../../../../components/users';\nimport { WidgetList, WidgetListItem, } from '../../../../../../components/widgets';\n\n\nfunction DefaultPaymentItem(props) {\n    return (\n        <WidgetListItem>\n            <FluidContainer>\n                <Row>\n                    <Col className=\"md-font-sm text-center text-muted\">No payment available</Col>\n                </Row>\n            </FluidContainer>\n        </WidgetListItem>\n    );\n}\n\n\nfunction PaymentItem(props) {\n    const date = new Date(props.payment.date);\n    return (\n        <WidgetListItem>\n            <FluidContainer>\n                <Row>\n                    <Col className=\"align-self-center\">\n                        <Row>\n                            <Col className=\"text-truncate\">\n                                <Currency value={props.payment.amount} />\n                            </Col>\n                            <Col className=\"col-auto\">\n                                <NumericDate date={date} />\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </FluidContainer>\n        </WidgetListItem>\n    );\n}\n\n\nexport default function ListSection(props) {\n    return (\n        <WidgetList>\n            {(props.payments.length !== 0) ?\n                <>\n                    {props.payments.map((payment, index) => (\n                        <PaymentItem \n                            key={index}\n                            session={props.session}\n                            payment={payment}\n                            handleDelete={props.deletePayment}\n                        />\n                    ))}\n                </> :\n                <DefaultPaymentItem />\n            }\n        </WidgetList>\n    );\n}","import React, { useState } from 'react';\nimport { useCompareUsers } from '../../../../../../components/hooks';\nimport { AutoLoader } from '../../../../../../components/loaders';\nimport { TitleBar, TitleToggler, Widget, WidgetBody, \n    WidgetCollapsible } from '../../../../../../components/widgets';\n\nimport AddSection from './addSection';\nimport InfoSection from './infoSection';\nimport ListSection from './listSection';\n\n\nexport default function PaymentSection(props) {\n    const [state, setState] = useState({\n        payments: [],\n        limit: 10\n    });\n    \n    async function appendPayments() {\n        try {\n            const url = `/api/appointments/${props.appointment.id}/payments`;\n\n            const searchParams = new URLSearchParams();\n            searchParams.append('page', Math.ceil(state.payments.length / state.limit));\n            searchParams.append('limit', state.limit);\n            \n            const response = await fetch(`${url}?${searchParams.toString()}`, {\n                headers: {\n                    'Authorization': `Bearer ${props.session.authToken}`\n                }\n            });\n\n            let newPayments = await response.json();\n            if (!response.ok) {\n                throw new Error(newPayments.message);\n            }\n\n            setState(prevState => {\n                const updatedPayments = [...prevState.payments, ...newPayments];\n\n                return {\n                    ...prevState,\n                    payments: updatedPayments\n                }\n            })\n        } catch (err) {\n            console.error(`Failed to append more payments. ${err}`);\n        }\n    }\n\n    async function appendPayment(newPayment) {\n        setState(prevState => {\n            const newPayments = [newPayment, ...prevState.payments];\n\n            return {\n                ...prevState,\n                payments: newPayments\n            }\n        });\n\n        if (props.updatePayment) {\n            const newPaymentBalance = props.appointment.paymentBalance - newPayment.amount;\n            props.updatePayment(newPaymentBalance);\n        }\n    }\n\n    async function deletePayment(id) {\n        try {\n            const response = await fetch(`/api/appointments/${props.appointment.id}/payments/${id}`, {\n                method: 'DELETE',\n                credentials: 'same-origin',\n                headers: {\n                  'Content-Type': 'application/json',\n                  'Authorization': `Bearer ${props.session.authToken}`\n                }\n            });\n\n            let data = await response.json();\n            if (!response.ok) {\n                throw new Error(data.message);\n            }\n\n            let deletedPayment = null;\n            setState(prevState => {\n                const newPayments = state.payments.filter(payment => {\n                    if (payment.id == id) {\n                        Object.assign(payment, deletedPayment);\n                    }\n                    return payment.id !== id;\n                });\n\n                return {\n                    ...prevState,\n                    payments: newPayments\n                }\n            });\n\n            if (props.updatePayment && deletedPayment !== null) {\n                const newPaymentBalance = props.appointment.paymentBalance + deletedPayment.amount;\n                props.updatePayment(newPaymentBalance);\n            }\n        } catch (err) {\n            console.error(`Failed to delete payment- ${id}. ${err}`);\n        }\n    }\n\n\n    // Now render view\n    const isCurrentUserPatient = useCompareUsers(props.session, props.appointment.patient);\n\n    return (\n        <>\n            <Widget>\n                <TitleBar title=\"Payments\">\n                    {isCurrentUserPatient &&\n                        <TitleToggler \n                            target=\"apptPaymentAdd01\"\n                            expandIcon=\"add\"\n                            collapseIcon=\"clear\"\n                        />\n                    }\n                </TitleBar>\n                <WidgetBody className=\"border-bottom\">\n                    <InfoSection\n                        appointment={props.appointment}\n                    />\n                </WidgetBody>\n                <WidgetCollapsible id=\"apptPaymentAdd01\">\n                    <AddSection \n                        session={props.session}\n                        appointment={props.appointment}\n                        appendPayment={appendPayment}\n                    />\n                </WidgetCollapsible>\n                <ListSection\n                    session={props.session}\n                    payments={state.payments}\n                    deletePayment={deletePayment}\n                />\n            </Widget>\n            <AutoLoader callback={appendPayments} />\n        </>\n    );\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}