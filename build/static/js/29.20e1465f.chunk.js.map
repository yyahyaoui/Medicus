{"version":3,"sources":["containers/users/index.js"],"names":["UserView","lazy","SearchPatientsView","SearchPhysiciansView","UserApp","props","session","useSelector","s","fallback","isLoading","path","match","exact","render","isPhysician","key","params","username"],"mappings":"qMAKMA,EAAWC,gBAAK,kBAAM,uDACtBC,EAAqBD,gBAAK,kBAAM,uDAChCE,EAAuBF,gBAAK,kBAAM,uDAGzB,SAASG,EAAQC,GAC5B,IAAMC,EAAUC,aAAY,SAAAC,GAAC,OAAIA,EAAEF,WAEnC,OACI,cAAC,WAAD,CAAUG,SAAU,cAAC,IAAD,CAAQC,WAAW,IAAvC,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CACIC,KAAMN,EAAMO,MAAMD,KAClBE,OAAO,EACPC,OAAQ,SAACT,GACL,OAAIC,EAAQS,YAEJ,cAACb,EAAD,2BAAwBG,GAAxB,IAA+BC,QAASA,KAIxC,cAACH,EAAD,2BAA0BE,GAA1B,IAAiCC,QAASA,QAK1D,cAAC,IAAD,CACIK,KAAI,UAAKN,EAAMO,MAAMD,KAAjB,cACJG,OAAQ,SAACT,GAAD,OACJ,wBAACL,EAAD,2BACQK,GADR,IAEIW,IAAKX,EAAMO,MAAMK,OAAOC,SACxBA,SAAUb,EAAMO,MAAMK,OAAOC,SAC7BZ,QAASA","file":"static/js/29.20e1465f.chunk.js","sourcesContent":["import React, { lazy, Suspense } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Route, Switch } from 'react-router';\nimport { Loader } from '../../components/loaders';\n\nconst UserView = lazy(() => import(\"./views/user\"));\nconst SearchPatientsView = lazy(() => import(\"./views/searchPatients\"));\nconst SearchPhysiciansView = lazy(() => import(\"./views/searchPhysicians\"));\n\n\nexport default function UserApp(props) {\n    const session = useSelector(s => s.session);\n\n    return (\n        <Suspense fallback={<Loader isLoading={true} />}>\n            <Switch>\n                <Route \n                    path={props.match.path}\n                    exact={true}\n                    render={(props) => {\n                        if (session.isPhysician) {\n                            return (\n                                <SearchPatientsView {...props} session={session} />\n                            );\n                        } else {\n                            return (\n                                <SearchPhysiciansView {...props} session={session} />\n                            );\n                        }\n                    }}\n                />\n                <Route\n                    path={`${props.match.path}/:username`}\n                    render={(props) => (\n                        <UserView\n                            {...props}\n                            key={props.match.params.username}\n                            username={props.match.params.username}\n                            session={session}\n                        />\n                    )}\n                />\n            </Switch>\n        </Suspense>\n    );\n}"],"sourceRoot":""}