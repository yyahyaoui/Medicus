{"version":3,"sources":["containers/appointments/index.js"],"names":["AppointmentView","lazy","AllAppointmentsView","WaitingRoomView","NewAppointmentView","AppointmentApp","props","session","useSelector","s","fallback","isLoading","path","match","render","id","params","location","search","searchParams","URLSearchParams","has","viewName","get"],"mappings":"qMAKMA,EAAkBC,gBAAK,kBAAM,uDAC7BC,EAAsBD,gBAAK,kBAAM,uDACjCE,EAAkBF,gBAAK,kBAAM,uDAC7BG,EAAqBH,gBAAK,kBAAM,iCAGvB,SAASI,EAAeC,GACnC,IAAMC,EAAUC,aAAY,SAAAC,GAAC,OAAIA,EAAEF,WAEnC,OACI,cAAC,WAAD,CAAUG,SAAU,cAAC,IAAD,CAAQC,WAAW,IAAvC,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CACIC,KAAI,UAAKN,EAAMO,MAAMD,KAAjB,QACJE,OAAQ,SAACR,GAAD,OACJ,cAACN,EAAD,2BACQM,GADR,IAEIS,GAAIT,EAAMO,MAAMG,OAAOD,GACvBR,QAASA,QAIrB,cAAC,IAAD,CACIK,KAAK,GACLE,OAAQ,SAACR,GACL,GAAIA,EAAMW,SAASC,OAAQ,CACvB,IAAIC,EAAe,IAAIC,gBAAgBd,EAAMW,SAASC,QAEtD,GAAIC,EAAaE,IAAI,QAAS,CAC1B,IAAMC,EAAWH,EAAaI,IAAI,QAElC,GAAiB,QAAbD,EAAoB,CAMpB,OAJIH,EAAaE,IAAI,cACLF,EAAaI,IAAI,aAI7B,cAACnB,EAAD,2BAAwBE,GAAxB,IAA+BC,QAASA,KAEzC,GAAiB,YAAbe,EACP,OACI,cAACnB,EAAD,2BAAqBG,GAArB,IAA4BC,QAASA,MAMrD,OACI,cAACL,EAAD,2BAAyBI,GAAzB,IAAgCC,QAASA","file":"static/js/26.8f135145.chunk.js","sourcesContent":["import React, { lazy, Suspense } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport { Loader } from '../../components/loaders';\n\nconst AppointmentView = lazy(() => import(\"./views/appointment\"));\nconst AllAppointmentsView = lazy(() => import(\"./views/allAppointments\"));\nconst WaitingRoomView = lazy(() => import('./views/waitingRoom'));\nconst NewAppointmentView = lazy(() => import('./views/newAppointment'));\n\n\nexport default function AppointmentApp(props) {\n    const session = useSelector(s => s.session);\n\n    return (\n        <Suspense fallback={<Loader isLoading={true} />}>\n            <Switch>\n                <Route\n                    path={`${props.match.path}/:id`}\n                    render={(props) => (\n                        <AppointmentView\n                            {...props} \n                            id={props.match.params.id}\n                            session={session}\n                        />\n                    )}\n                />\n                <Route\n                    path=\"\"\n                    render={(props) => {\n                        if (props.location.search) {\n                            let searchParams = new URLSearchParams(props.location.search);\n\n                            if (searchParams.has(\"view\")) {\n                                const viewName = searchParams.get(\"view\");\n\n                                if (viewName === \"new\") {\n                                    let physician = \"\";\n                                    if (searchParams.has(\"physician\")) {\n                                        physician = searchParams.get(\"physician\");\n                                    }\n\n                                    return (\n                                        <NewAppointmentView {...props} session={session} />\n                                    );\n                                } else if (viewName === \"waiting\") {\n                                    return (\n                                        <WaitingRoomView {...props} session={session} />\n                                    );\n                                }\n                            }\n                        }\n\n                        return (\n                            <AllAppointmentsView {...props} session={session} />\n                        );\n                    }}\n                />\n            </Switch>\n        </Suspense>\n    );\n}"],"sourceRoot":""}